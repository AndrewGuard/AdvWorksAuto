{
  "individualResults": [
    {
      "onlyInSource": [],
      "onlyInTarget": [
        {
          "objectType": "Table",
          "name": "Address",
          "schema": "SalesLT",
          "definitionBefore": "",
          "definitionAfter": "CREATE TABLE [SalesLT].[Address]\\r\\n(\\r\\n[AddressID] [int] NOT NULL IDENTITY(1, 1),\\r\\n[AddressLine1] [nvarchar] (60) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\\r\\n[AddressLine2] [nvarchar] (60) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\\r\\n[City] [nvarchar] (30) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\\r\\n[StateProvince] [dbo].[Name] NOT NULL,\\r\\n[CountryRegion] [dbo].[Name] NOT NULL,\\r\\n[PostalCode] [nvarchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\\r\\n[rowguid] [uniqueidentifier] NOT NULL ROWGUIDCOL CONSTRAINT [DF_Address_rowguid] DEFAULT (newid()),\\r\\n[ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_Address_ModifiedDate] DEFAULT (getdate())\\r\\n)\\r\\nGO\\r\\nALTER TABLE [SalesLT].[Address] ADD CONSTRAINT [PK_Address_AddressID] PRIMARY KEY CLUSTERED ([AddressID])\\r\\nGO\\r\\nCREATE NONCLUSTERED INDEX [IX_Address_AddressLine1_AddressLine2_City_StateProvince_PostalCode_CountryRegion] ON [SalesLT].[Address] ([AddressLine1], [AddressLine2], [City], [StateProvince], [PostalCode], [CountryRegion])\\r\\nGO\\r\\nALTER TABLE [SalesLT].[Address] ADD CONSTRAINT [AK_Address_rowguid] UNIQUE NONCLUSTERED ([rowguid])\\r\\nGO\\r\\nCREATE NONCLUSTERED INDEX [IX_Address_StateProvince] ON [SalesLT].[Address] ([StateProvince])\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Street address information for customers.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Address\u0027, NULL, NULL\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Primary key for Address records.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Address\u0027, \u0027COLUMN\u0027, N\u0027AddressID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027First street address line.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Address\u0027, \u0027COLUMN\u0027, N\u0027AddressLine1\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Second street address line.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Address\u0027, \u0027COLUMN\u0027, N\u0027AddressLine2\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Name of the city.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Address\u0027, \u0027COLUMN\u0027, N\u0027City\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Date and time the record was last updated.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Address\u0027, \u0027COLUMN\u0027, N\u0027ModifiedDate\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Postal code for the street address.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Address\u0027, \u0027COLUMN\u0027, N\u0027PostalCode\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Address\u0027, \u0027COLUMN\u0027, N\u0027rowguid\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Name of state or province.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Address\u0027, \u0027COLUMN\u0027, N\u0027StateProvince\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Unique nonclustered constraint. Used to support replication samples.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Address\u0027, \u0027CONSTRAINT\u0027, N\u0027AK_Address_rowguid\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Default constraint value of GETDATE()\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Address\u0027, \u0027CONSTRAINT\u0027, N\u0027DF_Address_ModifiedDate\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Default constraint value of NEWID()\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Address\u0027, \u0027CONSTRAINT\u0027, N\u0027DF_Address_rowguid\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Primary key (clustered) constraint\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Address\u0027, \u0027CONSTRAINT\u0027, N\u0027PK_Address_AddressID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Nonclustered index.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Address\u0027, \u0027INDEX\u0027, N\u0027IX_Address_AddressLine1_AddressLine2_City_StateProvince_PostalCode_CountryRegion\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Nonclustered index.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Address\u0027, \u0027INDEX\u0027, N\u0027IX_Address_StateProvince\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Clustered index created by a primary key constraint.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Address\u0027, \u0027INDEX\u0027, N\u0027PK_Address_AddressID\u0027\\r\\nGO\\r\\n"
        },
        {
          "objectType": "Table",
          "name": "CustomerAddress",
          "schema": "SalesLT",
          "definitionBefore": "",
          "definitionAfter": "CREATE TABLE [SalesLT].[CustomerAddress]\\r\\n(\\r\\n[CustomerID] [int] NOT NULL,\\r\\n[AddressID] [int] NOT NULL,\\r\\n[AddressType] [dbo].[Name] NOT NULL,\\r\\n[rowguid] [uniqueidentifier] NOT NULL ROWGUIDCOL CONSTRAINT [DF_CustomerAddress_rowguid] DEFAULT (newid()),\\r\\n[ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_CustomerAddress_ModifiedDate] DEFAULT (getdate())\\r\\n)\\r\\nGO\\r\\nALTER TABLE [SalesLT].[CustomerAddress] ADD CONSTRAINT [PK_CustomerAddress_CustomerID_AddressID] PRIMARY KEY CLUSTERED ([CustomerID], [AddressID])\\r\\nGO\\r\\nALTER TABLE [SalesLT].[CustomerAddress] ADD CONSTRAINT [AK_CustomerAddress_rowguid] UNIQUE NONCLUSTERED ([rowguid])\\r\\nGO\\r\\nALTER TABLE [SalesLT].[CustomerAddress] ADD CONSTRAINT [FK_CustomerAddress_Address_AddressID] FOREIGN KEY ([AddressID]) REFERENCES [SalesLT].[Address] ([AddressID])\\r\\nGO\\r\\nALTER TABLE [SalesLT].[CustomerAddress] ADD CONSTRAINT [FK_CustomerAddress_Customer_CustomerID] FOREIGN KEY ([CustomerID]) REFERENCES [SalesLT].[Customer] ([CustomerID])\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Cross-reference table mapping customers to their address(es).\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027CustomerAddress\u0027, NULL, NULL\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Primary key. Foreign key to Address.AddressID.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027CustomerAddress\u0027, \u0027COLUMN\u0027, N\u0027AddressID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027The kind of Address. One of: Archive, Billing, Home, Main Office, Primary, Shipping\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027CustomerAddress\u0027, \u0027COLUMN\u0027, N\u0027AddressType\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Primary key. Foreign key to Customer.CustomerID.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027CustomerAddress\u0027, \u0027COLUMN\u0027, N\u0027CustomerID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Date and time the record was last updated.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027CustomerAddress\u0027, \u0027COLUMN\u0027, N\u0027ModifiedDate\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027CustomerAddress\u0027, \u0027COLUMN\u0027, N\u0027rowguid\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Unique nonclustered constraint. Used to support replication samples.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027CustomerAddress\u0027, \u0027CONSTRAINT\u0027, N\u0027AK_CustomerAddress_rowguid\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Default constraint value of NEWID()\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027CustomerAddress\u0027, \u0027CONSTRAINT\u0027, N\u0027DF_CustomerAddress_rowguid\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Foreign key constraint referencing Address.AddressID.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027CustomerAddress\u0027, \u0027CONSTRAINT\u0027, N\u0027FK_CustomerAddress_Address_AddressID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Foreign key constraint referencing Customer.CustomerID.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027CustomerAddress\u0027, \u0027CONSTRAINT\u0027, N\u0027FK_CustomerAddress_Customer_CustomerID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Primary key (clustered) constraint\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027CustomerAddress\u0027, \u0027CONSTRAINT\u0027, N\u0027PK_CustomerAddress_CustomerID_AddressID\u0027\\r\\nGO\\r\\n"
        },
        {
          "objectType": "Table",
          "name": "Customer",
          "schema": "SalesLT",
          "definitionBefore": "",
          "definitionAfter": "CREATE TABLE [SalesLT].[Customer]\\r\\n(\\r\\n[CustomerID] [int] NOT NULL IDENTITY(1, 1),\\r\\n[NameStyle] [dbo].[NameStyle] NOT NULL CONSTRAINT [DF_Customer_NameStyle] DEFAULT ((0)),\\r\\n[Title] [nvarchar] (8) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\\r\\n[FirstName] [dbo].[Name] NOT NULL,\\r\\n[MiddleName] [dbo].[Name] NULL,\\r\\n[LastName] [dbo].[Name] NOT NULL,\\r\\n[Suffix] [nvarchar] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\\r\\n[CompanyName] [nvarchar] (128) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\\r\\n[SalesPerson] [nvarchar] (256) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\\r\\n[EmailAddress] [nvarchar] (50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\\r\\n[Phone] [dbo].[Phone] NULL,\\r\\n[PasswordHash] [varchar] (128) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\\r\\n[PasswordSalt] [nchar] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\\r\\n[rowguid] [uniqueidentifier] NOT NULL ROWGUIDCOL CONSTRAINT [DF_Customer_rowguid] DEFAULT (newid()),\\r\\n[ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_Customer_ModifiedDate] DEFAULT (getdate()),\\r\\n[New] [nchar] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\\r\\n[New2] [nchar] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL\\r\\n)\\r\\nGO\\r\\nALTER TABLE [SalesLT].[Customer] ADD CONSTRAINT [PK_Customer_CustomerID] PRIMARY KEY CLUSTERED ([CustomerID])\\r\\nGO\\r\\nCREATE NONCLUSTERED INDEX [IX_Customer_EmailAddress] ON [SalesLT].[Customer] ([EmailAddress])\\r\\nGO\\r\\nALTER TABLE [SalesLT].[Customer] ADD CONSTRAINT [AK_Customer_rowguid] UNIQUE NONCLUSTERED ([rowguid])\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Customer information.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Customer\u0027, NULL, NULL\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027The customer\u0027\u0027s organization.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Customer\u0027, \u0027COLUMN\u0027, N\u0027CompanyName\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Primary key for Customer records.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Customer\u0027, \u0027COLUMN\u0027, N\u0027CustomerID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027E-mail address for the person.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Customer\u0027, \u0027COLUMN\u0027, N\u0027EmailAddress\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027First name of the person.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Customer\u0027, \u0027COLUMN\u0027, N\u0027FirstName\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Last name of the person.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Customer\u0027, \u0027COLUMN\u0027, N\u0027LastName\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Middle name or middle initial of the person.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Customer\u0027, \u0027COLUMN\u0027, N\u0027MiddleName\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Date and time the record was last updated.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Customer\u0027, \u0027COLUMN\u0027, N\u0027ModifiedDate\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u00270 \u003d The data in FirstName and LastName are stored in western style (first name, last name) order.  1 \u003d Eastern style (last name, first name) order.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Customer\u0027, \u0027COLUMN\u0027, N\u0027NameStyle\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Password for the e-mail account.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Customer\u0027, \u0027COLUMN\u0027, N\u0027PasswordHash\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Phone number associated with the person.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Customer\u0027, \u0027COLUMN\u0027, N\u0027Phone\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Customer\u0027, \u0027COLUMN\u0027, N\u0027rowguid\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027The customer\u0027\u0027s sales person, an employee of AdventureWorks Cycles.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Customer\u0027, \u0027COLUMN\u0027, N\u0027SalesPerson\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Surname suffix. For example, Sr. or Jr.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Customer\u0027, \u0027COLUMN\u0027, N\u0027Suffix\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027A courtesy title. For example, Mr. or Ms.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Customer\u0027, \u0027COLUMN\u0027, N\u0027Title\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Unique nonclustered constraint. Used to support replication samples.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Customer\u0027, \u0027CONSTRAINT\u0027, N\u0027AK_Customer_rowguid\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Default constraint value of GETDATE()\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Customer\u0027, \u0027CONSTRAINT\u0027, N\u0027DF_Customer_ModifiedDate\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Default constraint value of 0\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Customer\u0027, \u0027CONSTRAINT\u0027, N\u0027DF_Customer_NameStyle\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Default constraint value of NEWID()\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Customer\u0027, \u0027CONSTRAINT\u0027, N\u0027DF_Customer_rowguid\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Primary key (clustered) constraint\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Customer\u0027, \u0027CONSTRAINT\u0027, N\u0027PK_Customer_CustomerID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Nonclustered index.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Customer\u0027, \u0027INDEX\u0027, N\u0027IX_Customer_EmailAddress\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Clustered index created by a primary key constraint.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Customer\u0027, \u0027INDEX\u0027, N\u0027PK_Customer_CustomerID\u0027\\r\\nGO\\r\\n"
        },
        {
          "objectType": "Table",
          "name": "ProductCategory",
          "schema": "SalesLT",
          "definitionBefore": "",
          "definitionAfter": "CREATE TABLE [SalesLT].[ProductCategory]\\r\\n(\\r\\n[ProductCategoryID] [int] NOT NULL IDENTITY(1, 1),\\r\\n[ParentProductCategoryID] [int] NULL,\\r\\n[Name] [dbo].[Name] NOT NULL,\\r\\n[rowguid] [uniqueidentifier] NOT NULL ROWGUIDCOL CONSTRAINT [DF_ProductCategory_rowguid] DEFAULT (newid()),\\r\\n[ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_ProductCategory_ModifiedDate] DEFAULT (getdate())\\r\\n)\\r\\nGO\\r\\nALTER TABLE [SalesLT].[ProductCategory] ADD CONSTRAINT [PK_ProductCategory_ProductCategoryID] PRIMARY KEY CLUSTERED ([ProductCategoryID])\\r\\nGO\\r\\nALTER TABLE [SalesLT].[ProductCategory] ADD CONSTRAINT [AK_ProductCategory_Name] UNIQUE NONCLUSTERED ([Name])\\r\\nGO\\r\\nALTER TABLE [SalesLT].[ProductCategory] ADD CONSTRAINT [AK_ProductCategory_rowguid] UNIQUE NONCLUSTERED ([rowguid])\\r\\nGO\\r\\nALTER TABLE [SalesLT].[ProductCategory] ADD CONSTRAINT [FK_ProductCategory_ProductCategory_ParentProductCategoryID_ProductCategoryID] FOREIGN KEY ([ParentProductCategoryID]) REFERENCES [SalesLT].[ProductCategory] ([ProductCategoryID])\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027High-level product categorization.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductCategory\u0027, NULL, NULL\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Date and time the record was last updated.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductCategory\u0027, \u0027COLUMN\u0027, N\u0027ModifiedDate\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Category description.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductCategory\u0027, \u0027COLUMN\u0027, N\u0027Name\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Product category identification number of immediate ancestor category. Foreign key to ProductCategory.ProductCategoryID.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductCategory\u0027, \u0027COLUMN\u0027, N\u0027ParentProductCategoryID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Primary key for ProductCategory records.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductCategory\u0027, \u0027COLUMN\u0027, N\u0027ProductCategoryID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductCategory\u0027, \u0027COLUMN\u0027, N\u0027rowguid\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Unique nonclustered constraint.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductCategory\u0027, \u0027CONSTRAINT\u0027, N\u0027AK_ProductCategory_Name\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Unique nonclustered constraint. Used to support replication samples.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductCategory\u0027, \u0027CONSTRAINT\u0027, N\u0027AK_ProductCategory_rowguid\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Default constraint value of GETDATE()\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductCategory\u0027, \u0027CONSTRAINT\u0027, N\u0027DF_ProductCategory_ModifiedDate\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Default constraint value of NEWID()()\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductCategory\u0027, \u0027CONSTRAINT\u0027, N\u0027DF_ProductCategory_rowguid\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Foreign key constraint referencing ProductCategory.ProductCategoryID.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductCategory\u0027, \u0027CONSTRAINT\u0027, N\u0027FK_ProductCategory_ProductCategory_ParentProductCategoryID_ProductCategoryID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Primary key (clustered) constraint\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductCategory\u0027, \u0027CONSTRAINT\u0027, N\u0027PK_ProductCategory_ProductCategoryID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Clustered index created by a primary key constraint.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductCategory\u0027, \u0027INDEX\u0027, N\u0027PK_ProductCategory_ProductCategoryID\u0027\\r\\nGO\\r\\n"
        },
        {
          "objectType": "Table",
          "name": "ProductDescription",
          "schema": "SalesLT",
          "definitionBefore": "",
          "definitionAfter": "CREATE TABLE [SalesLT].[ProductDescription]\\r\\n(\\r\\n[ProductDescriptionID] [int] NOT NULL IDENTITY(1, 1),\\r\\n[Description] [nvarchar] (400) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\\r\\n[rowguid] [uniqueidentifier] NOT NULL ROWGUIDCOL CONSTRAINT [DF_ProductDescription_rowguid] DEFAULT (newid()),\\r\\n[ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_ProductDescription_ModifiedDate] DEFAULT (getdate())\\r\\n)\\r\\nGO\\r\\nALTER TABLE [SalesLT].[ProductDescription] ADD CONSTRAINT [PK_ProductDescription_ProductDescriptionID] PRIMARY KEY CLUSTERED ([ProductDescriptionID])\\r\\nGO\\r\\nALTER TABLE [SalesLT].[ProductDescription] ADD CONSTRAINT [AK_ProductDescription_rowguid] UNIQUE NONCLUSTERED ([rowguid])\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Product descriptions in several languages.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductDescription\u0027, NULL, NULL\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Description of the product.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductDescription\u0027, \u0027COLUMN\u0027, N\u0027Description\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Date and time the record was last updated.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductDescription\u0027, \u0027COLUMN\u0027, N\u0027ModifiedDate\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Primary key for ProductDescription records.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductDescription\u0027, \u0027COLUMN\u0027, N\u0027ProductDescriptionID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductDescription\u0027, \u0027COLUMN\u0027, N\u0027rowguid\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Unique nonclustered constraint. Used to support replication samples.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductDescription\u0027, \u0027CONSTRAINT\u0027, N\u0027AK_ProductDescription_rowguid\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Default constraint value of GETDATE()\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductDescription\u0027, \u0027CONSTRAINT\u0027, N\u0027DF_ProductDescription_ModifiedDate\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Default constraint value of NEWID()\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductDescription\u0027, \u0027CONSTRAINT\u0027, N\u0027DF_ProductDescription_rowguid\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Primary key (clustered) constraint\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductDescription\u0027, \u0027CONSTRAINT\u0027, N\u0027PK_ProductDescription_ProductDescriptionID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Clustered index created by a primary key constraint.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductDescription\u0027, \u0027INDEX\u0027, N\u0027PK_ProductDescription_ProductDescriptionID\u0027\\r\\nGO\\r\\n"
        },
        {
          "objectType": "Table",
          "name": "ProductModelProductDescription",
          "schema": "SalesLT",
          "definitionBefore": "",
          "definitionAfter": "CREATE TABLE [SalesLT].[ProductModelProductDescription]\\r\\n(\\r\\n[ProductModelID] [int] NOT NULL,\\r\\n[ProductDescriptionID] [int] NOT NULL,\\r\\n[Culture] [nchar] (6) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\\r\\n[rowguid] [uniqueidentifier] NOT NULL ROWGUIDCOL CONSTRAINT [DF_ProductModelProductDescription_rowguid] DEFAULT (newid()),\\r\\n[ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_ProductModelProductDescription_ModifiedDate] DEFAULT (getdate())\\r\\n)\\r\\nGO\\r\\nALTER TABLE [SalesLT].[ProductModelProductDescription] ADD CONSTRAINT [PK_ProductModelProductDescription_ProductModelID_ProductDescriptionID_Culture] PRIMARY KEY CLUSTERED ([ProductModelID], [ProductDescriptionID], [Culture])\\r\\nGO\\r\\nALTER TABLE [SalesLT].[ProductModelProductDescription] ADD CONSTRAINT [AK_ProductModelProductDescription_rowguid] UNIQUE NONCLUSTERED ([rowguid])\\r\\nGO\\r\\nALTER TABLE [SalesLT].[ProductModelProductDescription] ADD CONSTRAINT [FK_ProductModelProductDescription_ProductDescription_ProductDescriptionID] FOREIGN KEY ([ProductDescriptionID]) REFERENCES [SalesLT].[ProductDescription] ([ProductDescriptionID])\\r\\nGO\\r\\nALTER TABLE [SalesLT].[ProductModelProductDescription] ADD CONSTRAINT [FK_ProductModelProductDescription_ProductModel_ProductModelID] FOREIGN KEY ([ProductModelID]) REFERENCES [SalesLT].[ProductModel] ([ProductModelID])\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Cross-reference table mapping product descriptions and the language the description is written in.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductModelProductDescription\u0027, NULL, NULL\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027The culture for which the description is written\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductModelProductDescription\u0027, \u0027COLUMN\u0027, N\u0027Culture\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Date and time the record was last updated.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductModelProductDescription\u0027, \u0027COLUMN\u0027, N\u0027ModifiedDate\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Primary key. Foreign key to ProductDescription.ProductDescriptionID.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductModelProductDescription\u0027, \u0027COLUMN\u0027, N\u0027ProductDescriptionID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Primary key. Foreign key to ProductModel.ProductModelID.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductModelProductDescription\u0027, \u0027COLUMN\u0027, N\u0027ProductModelID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Unique nonclustered constraint. Used to support replication samples.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductModelProductDescription\u0027, \u0027CONSTRAINT\u0027, N\u0027AK_ProductModelProductDescription_rowguid\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Default constraint value of GETDATE()\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductModelProductDescription\u0027, \u0027CONSTRAINT\u0027, N\u0027DF_ProductModelProductDescription_ModifiedDate\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Foreign key constraint referencing ProductDescription.ProductDescriptionID.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductModelProductDescription\u0027, \u0027CONSTRAINT\u0027, N\u0027FK_ProductModelProductDescription_ProductDescription_ProductDescriptionID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Foreign key constraint referencing ProductModel.ProductModelID.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductModelProductDescription\u0027, \u0027CONSTRAINT\u0027, N\u0027FK_ProductModelProductDescription_ProductModel_ProductModelID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Primary key (clustered) constraint\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductModelProductDescription\u0027, \u0027CONSTRAINT\u0027, N\u0027PK_ProductModelProductDescription_ProductModelID_ProductDescriptionID_Culture\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Clustered index created by a primary key constraint.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductModelProductDescription\u0027, \u0027INDEX\u0027, N\u0027PK_ProductModelProductDescription_ProductModelID_ProductDescriptionID_Culture\u0027\\r\\nGO\\r\\n"
        },
        {
          "objectType": "Table",
          "name": "ProductModel",
          "schema": "SalesLT",
          "definitionBefore": "",
          "definitionAfter": "CREATE TABLE [SalesLT].[ProductModel]\\r\\n(\\r\\n[ProductModelID] [int] NOT NULL IDENTITY(1, 1),\\r\\n[Name] [dbo].[Name] NOT NULL,\\r\\n[CatalogDescription] [xml] (CONTENT [SalesLT].[ProductDescriptionSchemaCollection]) NULL,\\r\\n[rowguid] [uniqueidentifier] NOT NULL ROWGUIDCOL CONSTRAINT [DF_ProductModel_rowguid] DEFAULT (newid()),\\r\\n[ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_ProductModel_ModifiedDate] DEFAULT (getdate())\\r\\n)\\r\\nGO\\r\\nALTER TABLE [SalesLT].[ProductModel] ADD CONSTRAINT [PK_ProductModel_ProductModelID] PRIMARY KEY CLUSTERED ([ProductModelID])\\r\\nGO\\r\\nALTER TABLE [SalesLT].[ProductModel] ADD CONSTRAINT [AK_ProductModel_Name] UNIQUE NONCLUSTERED ([Name])\\r\\nGO\\r\\nALTER TABLE [SalesLT].[ProductModel] ADD CONSTRAINT [AK_ProductModel_rowguid] UNIQUE NONCLUSTERED ([rowguid])\\r\\nGO\\r\\nCREATE PRIMARY XML INDEX [PXML_ProductModel_CatalogDescription]\\r\\nON [SalesLT].[ProductModel] ([CatalogDescription])\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Unique nonclustered constraint.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductModel\u0027, \u0027CONSTRAINT\u0027, N\u0027AK_ProductModel_Name\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Unique nonclustered constraint. Used to support replication samples.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductModel\u0027, \u0027CONSTRAINT\u0027, N\u0027AK_ProductModel_rowguid\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Default constraint value of GETDATE()\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductModel\u0027, \u0027CONSTRAINT\u0027, N\u0027DF_ProductModel_ModifiedDate\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Default constraint value of NEWID()\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductModel\u0027, \u0027CONSTRAINT\u0027, N\u0027DF_ProductModel_rowguid\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Primary key (clustered) constraint\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductModel\u0027, \u0027CONSTRAINT\u0027, N\u0027PK_ProductModel_ProductModelID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Clustered index created by a primary key constraint.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductModel\u0027, \u0027INDEX\u0027, N\u0027PK_ProductModel_ProductModelID\u0027\\r\\nGO\\r\\n"
        },
        {
          "objectType": "Table",
          "name": "Product",
          "schema": "SalesLT",
          "definitionBefore": "",
          "definitionAfter": "CREATE TABLE [SalesLT].[Product]\\r\\n(\\r\\n[ProductID] [int] NOT NULL IDENTITY(1, 1),\\r\\n[Name] [dbo].[Name] NOT NULL,\\r\\n[ProductNumber] [nvarchar] (25) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\\r\\n[Color] [nvarchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\\r\\n[StandardCost] [money] NOT NULL,\\r\\n[ListPrice] [money] NOT NULL,\\r\\n[Size] [nvarchar] (5) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\\r\\n[Weight] [decimal] (8, 2) NULL,\\r\\n[ProductCategoryID] [int] NULL,\\r\\n[ProductModelID] [int] NULL,\\r\\n[SellStartDate] [datetime] NOT NULL,\\r\\n[SellEndDate] [datetime] NULL,\\r\\n[DiscontinuedDate] [datetime] NULL,\\r\\n[ThumbNailPhoto] [varbinary] (max) NULL,\\r\\n[ThumbnailPhotoFileName] [nvarchar] (50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\\r\\n[rowguid] [uniqueidentifier] NOT NULL ROWGUIDCOL CONSTRAINT [DF_Product_rowguid] DEFAULT (newid()),\\r\\n[ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_Product_ModifiedDate] DEFAULT (getdate())\\r\\n)\\r\\nGO\\r\\nALTER TABLE [SalesLT].[Product] ADD CONSTRAINT [CK_Product_ListPrice] CHECK (([ListPrice]\u003e\u003d(0.00)))\\r\\nGO\\r\\nALTER TABLE [SalesLT].[Product] ADD CONSTRAINT [CK_Product_SellEndDate] CHECK (([SellEndDate]\u003e\u003d[SellStartDate] OR [SellEndDate] IS NULL))\\r\\nGO\\r\\nALTER TABLE [SalesLT].[Product] ADD CONSTRAINT [CK_Product_StandardCost] CHECK (([StandardCost]\u003e\u003d(0.00)))\\r\\nGO\\r\\nALTER TABLE [SalesLT].[Product] ADD CONSTRAINT [CK_Product_Weight] CHECK (([Weight]\u003e(0.00)))\\r\\nGO\\r\\nALTER TABLE [SalesLT].[Product] ADD CONSTRAINT [PK_Product_ProductID] PRIMARY KEY CLUSTERED ([ProductID])\\r\\nGO\\r\\nALTER TABLE [SalesLT].[Product] ADD CONSTRAINT [AK_Product_Name] UNIQUE NONCLUSTERED ([Name])\\r\\nGO\\r\\nALTER TABLE [SalesLT].[Product] ADD CONSTRAINT [AK_Product_ProductNumber] UNIQUE NONCLUSTERED ([ProductNumber])\\r\\nGO\\r\\nALTER TABLE [SalesLT].[Product] ADD CONSTRAINT [AK_Product_rowguid] UNIQUE NONCLUSTERED ([rowguid])\\r\\nGO\\r\\nALTER TABLE [SalesLT].[Product] ADD CONSTRAINT [FK_Product_ProductCategory_ProductCategoryID] FOREIGN KEY ([ProductCategoryID]) REFERENCES [SalesLT].[ProductCategory] ([ProductCategoryID])\\r\\nGO\\r\\nALTER TABLE [SalesLT].[Product] ADD CONSTRAINT [FK_Product_ProductModel_ProductModelID] FOREIGN KEY ([ProductModelID]) REFERENCES [SalesLT].[ProductModel] ([ProductModelID])\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Products sold or used in the manfacturing of sold products.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Product\u0027, NULL, NULL\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Product color.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Product\u0027, \u0027COLUMN\u0027, N\u0027Color\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Date the product was discontinued.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Product\u0027, \u0027COLUMN\u0027, N\u0027DiscontinuedDate\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Selling price.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Product\u0027, \u0027COLUMN\u0027, N\u0027ListPrice\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Date and time the record was last updated.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Product\u0027, \u0027COLUMN\u0027, N\u0027ModifiedDate\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Name of the product.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Product\u0027, \u0027COLUMN\u0027, N\u0027Name\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Product is a member of this product category. Foreign key to ProductCategory.ProductCategoryID. \u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Product\u0027, \u0027COLUMN\u0027, N\u0027ProductCategoryID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Primary key for Product records.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Product\u0027, \u0027COLUMN\u0027, N\u0027ProductID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Product is a member of this product model. Foreign key to ProductModel.ProductModelID.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Product\u0027, \u0027COLUMN\u0027, N\u0027ProductModelID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Unique product identification number.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Product\u0027, \u0027COLUMN\u0027, N\u0027ProductNumber\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Product\u0027, \u0027COLUMN\u0027, N\u0027rowguid\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Date the product was no longer available for sale.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Product\u0027, \u0027COLUMN\u0027, N\u0027SellEndDate\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Date the product was available for sale.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Product\u0027, \u0027COLUMN\u0027, N\u0027SellStartDate\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Product size.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Product\u0027, \u0027COLUMN\u0027, N\u0027Size\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Standard cost of the product.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Product\u0027, \u0027COLUMN\u0027, N\u0027StandardCost\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Small image of the product.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Product\u0027, \u0027COLUMN\u0027, N\u0027ThumbNailPhoto\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Small image file name.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Product\u0027, \u0027COLUMN\u0027, N\u0027ThumbnailPhotoFileName\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Product weight.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Product\u0027, \u0027COLUMN\u0027, N\u0027Weight\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Unique nonclustered constraint.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Product\u0027, \u0027CONSTRAINT\u0027, N\u0027AK_Product_Name\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Unique nonclustered constraint.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Product\u0027, \u0027CONSTRAINT\u0027, N\u0027AK_Product_ProductNumber\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Unique nonclustered constraint. Used to support replication samples.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Product\u0027, \u0027CONSTRAINT\u0027, N\u0027AK_Product_rowguid\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Check constraint [ListPrice] \u003e\u003d (0.00)\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Product\u0027, \u0027CONSTRAINT\u0027, N\u0027CK_Product_ListPrice\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Check constraint [SellEndDate] \u003e\u003d [SellStartDate] OR [SellEndDate] IS NULL\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Product\u0027, \u0027CONSTRAINT\u0027, N\u0027CK_Product_SellEndDate\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Check constraint [Weight] \u003e (0.00)\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Product\u0027, \u0027CONSTRAINT\u0027, N\u0027CK_Product_Weight\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Default constraint value of GETDATE()\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Product\u0027, \u0027CONSTRAINT\u0027, N\u0027DF_Product_ModifiedDate\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Default constraint value of NEWID()\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Product\u0027, \u0027CONSTRAINT\u0027, N\u0027DF_Product_rowguid\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Foreign key constraint referencing ProductCategory.ProductCategoryID.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Product\u0027, \u0027CONSTRAINT\u0027, N\u0027FK_Product_ProductCategory_ProductCategoryID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Foreign key constraint referencing ProductModel.ProductModelID.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Product\u0027, \u0027CONSTRAINT\u0027, N\u0027FK_Product_ProductModel_ProductModelID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Primary key (clustered) constraint\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Product\u0027, \u0027CONSTRAINT\u0027, N\u0027PK_Product_ProductID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Clustered index created by a primary key constraint.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Product\u0027, \u0027INDEX\u0027, N\u0027PK_Product_ProductID\u0027\\r\\nGO\\r\\n"
        },
        {
          "objectType": "Table",
          "name": "SalesOrderDetail",
          "schema": "SalesLT",
          "definitionBefore": "",
          "definitionAfter": "CREATE TABLE [SalesLT].[SalesOrderDetail]\\r\\n(\\r\\n[SalesOrderID] [int] NOT NULL,\\r\\n[SalesOrderDetailID] [int] NOT NULL IDENTITY(1, 1),\\r\\n[OrderQty] [smallint] NOT NULL,\\r\\n[ProductID] [int] NOT NULL,\\r\\n[UnitPrice] [money] NOT NULL,\\r\\n[UnitPriceDiscount] [money] NOT NULL CONSTRAINT [DF_SalesOrderDetail_UnitPriceDiscount] DEFAULT ((0.0)),\\r\\n[LineTotal] AS (isnull(([UnitPrice]*((1.0)-[UnitPriceDiscount]))*[OrderQty],(0.0))),\\r\\n[rowguid] [uniqueidentifier] NOT NULL ROWGUIDCOL CONSTRAINT [DF_SalesOrderDetail_rowguid] DEFAULT (newid()),\\r\\n[ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_SalesOrderDetail_ModifiedDate] DEFAULT (getdate())\\r\\n)\\r\\nGO\\r\\nCREATE TRIGGER [SalesLT].[iduSalesOrderDetail] ON [SalesLT].[SalesOrderDetail] \\r\\nAFTER INSERT, DELETE, UPDATE AS \\r\\nBEGIN\\r\\n    DECLARE @Count int;\\r\\n\\r\\n    SET @Count \u003d @@ROWCOUNT;\\r\\n    IF @Count \u003d 0 \\r\\n        RETURN;\\r\\n\\r\\n    SET NOCOUNT ON;\\r\\n\\r\\n    BEGIN TRY\\r\\n        -- If inserting or updating these columns\\r\\n        IF UPDATE([ProductID]) OR UPDATE([OrderQty]) OR UPDATE([UnitPrice]) OR UPDATE([UnitPriceDiscount]) \\r\\n\\r\\n        -- Update SubTotal in SalesOrderHeader record. Note that this causes the \\r\\n        -- SalesOrderHeader trigger to fire which will update the RevisionNumber.\\r\\n        UPDATE [SalesLT].[SalesOrderHeader]\\r\\n        SET [SalesLT].[SalesOrderHeader].[SubTotal] \u003d \\r\\n            (SELECT SUM([SalesLT].[SalesOrderDetail].[LineTotal])\\r\\n                FROM [SalesLT].[SalesOrderDetail]\\r\\n                WHERE [SalesLT].[SalesOrderHeader].[SalesOrderID] \u003d [SalesLT].[SalesOrderDetail].[SalesOrderID])\\r\\n        WHERE [SalesLT].[SalesOrderHeader].[SalesOrderID] IN (SELECT inserted.[SalesOrderID] FROM inserted);\\r\\n\\r\\n    END TRY\\r\\n    BEGIN CATCH\\r\\n        EXECUTE [dbo].[uspPrintError];\\r\\n\\r\\n        -- Rollback any active or uncommittable transactions before\\r\\n        -- inserting information in the ErrorLog\\r\\n        IF @@TRANCOUNT \u003e 0\\r\\n        BEGIN\\r\\n            ROLLBACK TRANSACTION;\\r\\n        END\\r\\n\\r\\n        EXECUTE [dbo].[uspLogError];\\r\\n    END CATCH;\\r\\nEND;\\r\\nGO\\r\\nALTER TABLE [SalesLT].[SalesOrderDetail] ADD CONSTRAINT [CK_SalesOrderDetail_OrderQty] CHECK (([OrderQty]\u003e(0)))\\r\\nGO\\r\\nALTER TABLE [SalesLT].[SalesOrderDetail] ADD CONSTRAINT [CK_SalesOrderDetail_UnitPrice] CHECK (([UnitPrice]\u003e\u003d(0.00)))\\r\\nGO\\r\\nALTER TABLE [SalesLT].[SalesOrderDetail] ADD CONSTRAINT [CK_SalesOrderDetail_UnitPriceDiscount] CHECK (([UnitPriceDiscount]\u003e\u003d(0.00)))\\r\\nGO\\r\\nALTER TABLE [SalesLT].[SalesOrderDetail] ADD CONSTRAINT [PK_SalesOrderDetail_SalesOrderID_SalesOrderDetailID] PRIMARY KEY CLUSTERED ([SalesOrderID], [SalesOrderDetailID])\\r\\nGO\\r\\nCREATE NONCLUSTERED INDEX [IX_SalesOrderDetail_ProductID] ON [SalesLT].[SalesOrderDetail] ([ProductID])\\r\\nGO\\r\\nALTER TABLE [SalesLT].[SalesOrderDetail] ADD CONSTRAINT [AK_SalesOrderDetail_rowguid] UNIQUE NONCLUSTERED ([rowguid])\\r\\nGO\\r\\nALTER TABLE [SalesLT].[SalesOrderDetail] ADD CONSTRAINT [FK_SalesOrderDetail_Product_ProductID] FOREIGN KEY ([ProductID]) REFERENCES [SalesLT].[Product] ([ProductID])\\r\\nGO\\r\\nALTER TABLE [SalesLT].[SalesOrderDetail] ADD CONSTRAINT [FK_SalesOrderDetail_SalesOrderHeader_SalesOrderID] FOREIGN KEY ([SalesOrderID]) REFERENCES [SalesLT].[SalesOrderHeader] ([SalesOrderID]) ON DELETE CASCADE\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Individual products associated with a specific sales order. See SalesOrderHeader.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderDetail\u0027, NULL, NULL\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Per product subtotal. Computed as UnitPrice * (1 - UnitPriceDiscount) * OrderQty.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderDetail\u0027, \u0027COLUMN\u0027, N\u0027LineTotal\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Date and time the record was last updated.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderDetail\u0027, \u0027COLUMN\u0027, N\u0027ModifiedDate\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Quantity ordered per product.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderDetail\u0027, \u0027COLUMN\u0027, N\u0027OrderQty\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Product sold to customer. Foreign key to Product.ProductID.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderDetail\u0027, \u0027COLUMN\u0027, N\u0027ProductID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderDetail\u0027, \u0027COLUMN\u0027, N\u0027rowguid\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Primary key. One incremental unique number per product sold.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderDetail\u0027, \u0027COLUMN\u0027, N\u0027SalesOrderDetailID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Primary key. Foreign key to SalesOrderHeader.SalesOrderID.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderDetail\u0027, \u0027COLUMN\u0027, N\u0027SalesOrderID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Selling price of a single product.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderDetail\u0027, \u0027COLUMN\u0027, N\u0027UnitPrice\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Discount amount.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderDetail\u0027, \u0027COLUMN\u0027, N\u0027UnitPriceDiscount\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Unique nonclustered constraint. Used to support replication samples.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderDetail\u0027, \u0027CONSTRAINT\u0027, N\u0027AK_SalesOrderDetail_rowguid\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Check constraint [OrderQty] \u003e (0)\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderDetail\u0027, \u0027CONSTRAINT\u0027, N\u0027CK_SalesOrderDetail_OrderQty\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Check constraint [UnitPrice] \u003e\u003d (0.00)\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderDetail\u0027, \u0027CONSTRAINT\u0027, N\u0027CK_SalesOrderDetail_UnitPrice\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Check constraint [UnitPriceDiscount] \u003e\u003d (0.00)\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderDetail\u0027, \u0027CONSTRAINT\u0027, N\u0027CK_SalesOrderDetail_UnitPriceDiscount\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Default constraint value of GETDATE()\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderDetail\u0027, \u0027CONSTRAINT\u0027, N\u0027DF_SalesOrderDetail_ModifiedDate\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Default constraint value of NEWID()\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderDetail\u0027, \u0027CONSTRAINT\u0027, N\u0027DF_SalesOrderDetail_rowguid\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Default constraint value of 0.0\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderDetail\u0027, \u0027CONSTRAINT\u0027, N\u0027DF_SalesOrderDetail_UnitPriceDiscount\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Foreign key constraint referencing SalesOrderHeader.SalesOrderID.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderDetail\u0027, \u0027CONSTRAINT\u0027, N\u0027FK_SalesOrderDetail_SalesOrderHeader_SalesOrderID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Primary key (clustered) constraint\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderDetail\u0027, \u0027CONSTRAINT\u0027, N\u0027PK_SalesOrderDetail_SalesOrderID_SalesOrderDetailID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Nonclustered index.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderDetail\u0027, \u0027INDEX\u0027, N\u0027IX_SalesOrderDetail_ProductID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Clustered index created by a primary key constraint.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderDetail\u0027, \u0027INDEX\u0027, N\u0027PK_SalesOrderDetail_SalesOrderID_SalesOrderDetailID\u0027\\r\\nGO\\r\\n"
        },
        {
          "objectType": "Table",
          "name": "SalesOrderHeader",
          "schema": "SalesLT",
          "definitionBefore": "",
          "definitionAfter": "CREATE TABLE [SalesLT].[SalesOrderHeader]\\r\\n(\\r\\n[SalesOrderID] [int] NOT NULL IDENTITY(1, 1),\\r\\n[RevisionNumber] [tinyint] NOT NULL CONSTRAINT [DF_SalesOrderHeader_RevisionNumber] DEFAULT ((0)),\\r\\n[OrderDate] [datetime] NOT NULL CONSTRAINT [DF_SalesOrderHeader_OrderDate] DEFAULT (getdate()),\\r\\n[DueDate] [datetime] NOT NULL,\\r\\n[ShipDate] [datetime] NULL,\\r\\n[Status] [tinyint] NOT NULL CONSTRAINT [DF_SalesOrderHeader_Status] DEFAULT ((1)),\\r\\n[OnlineOrderFlag] [dbo].[Flag] NOT NULL CONSTRAINT [DF_SalesOrderHeader_OnlineOrderFlag] DEFAULT ((1)),\\r\\n[SalesOrderNumber] AS (isnull(N\u0027SO\u0027+CONVERT([nvarchar](23),[SalesOrderID],(0)),N\u0027*** ERROR ***\u0027)),\\r\\n[PurchaseOrderNumber] [dbo].[OrderNumber] NULL,\\r\\n[AccountNumber] [dbo].[AccountNumber] NULL,\\r\\n[CustomerID] [int] NOT NULL,\\r\\n[ShipToAddressID] [int] NULL,\\r\\n[BillToAddressID] [int] NULL,\\r\\n[ShipMethod] [nvarchar] (50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\\r\\n[CreditCardApprovalCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\\r\\n[SubTotal] [money] NOT NULL CONSTRAINT [DF_SalesOrderHeader_SubTotal] DEFAULT ((0.00)),\\r\\n[TaxAmt] [money] NOT NULL CONSTRAINT [DF_SalesOrderHeader_TaxAmt] DEFAULT ((0.00)),\\r\\n[Freight] [money] NOT NULL CONSTRAINT [DF_SalesOrderHeader_Freight] DEFAULT ((0.00)),\\r\\n[TotalDue] AS (isnull(([SubTotal]+[TaxAmt])+[Freight],(0))),\\r\\n[Comment] [nvarchar] (max) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\\r\\n[rowguid] [uniqueidentifier] NOT NULL ROWGUIDCOL CONSTRAINT [DF_SalesOrderHeader_rowguid] DEFAULT (newid()),\\r\\n[ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_SalesOrderHeader_ModifiedDate] DEFAULT (getdate())\\r\\n)\\r\\nGO\\r\\nCREATE TRIGGER [SalesLT].[uSalesOrderHeader] ON [SalesLT].[SalesOrderHeader] \\r\\nAFTER UPDATE AS \\r\\nBEGIN\\r\\n    DECLARE @Count int;\\r\\n\\r\\n    SET @Count \u003d @@ROWCOUNT;\\r\\n    IF @Count \u003d 0 \\r\\n        RETURN;\\r\\n\\r\\n    SET NOCOUNT ON;\\r\\n\\r\\n    BEGIN TRY\\r\\n        -- Update RevisionNumber for modification of any field EXCEPT the Status.\\r\\n        IF NOT (UPDATE([Status]) OR UPDATE([RevisionNumber]))\\r\\n        BEGIN\\r\\n            UPDATE [SalesLT].[SalesOrderHeader]\\r\\n            SET [SalesLT].[SalesOrderHeader].[RevisionNumber] \u003d \\r\\n                [SalesLT].[SalesOrderHeader].[RevisionNumber] + 1\\r\\n            WHERE [SalesLT].[SalesOrderHeader].[SalesOrderID] IN \\r\\n                (SELECT inserted.[SalesOrderID] FROM inserted);\\r\\n        END;\\r\\n    END TRY\\r\\n    BEGIN CATCH\\r\\n        EXECUTE [dbo].[uspPrintError];\\r\\n\\r\\n        -- Rollback any active or uncommittable transactions before\\r\\n        -- inserting information in the ErrorLog\\r\\n        IF @@TRANCOUNT \u003e 0\\r\\n        BEGIN\\r\\n            ROLLBACK TRANSACTION;\\r\\n        END\\r\\n\\r\\n        EXECUTE [dbo].[uspLogError];\\r\\n    END CATCH;\\r\\nEND;\\r\\nGO\\r\\nALTER TABLE [SalesLT].[SalesOrderHeader] ADD CONSTRAINT [CK_SalesOrderHeader_DueDate] CHECK (([DueDate]\u003e\u003d[OrderDate]))\\r\\nGO\\r\\nALTER TABLE [SalesLT].[SalesOrderHeader] ADD CONSTRAINT [CK_SalesOrderHeader_Freight] CHECK (([Freight]\u003e\u003d(0.00)))\\r\\nGO\\r\\nALTER TABLE [SalesLT].[SalesOrderHeader] ADD CONSTRAINT [CK_SalesOrderHeader_ShipDate] CHECK (([ShipDate]\u003e\u003d[OrderDate] OR [ShipDate] IS NULL))\\r\\nGO\\r\\nALTER TABLE [SalesLT].[SalesOrderHeader] ADD CONSTRAINT [CK_SalesOrderHeader_Status] CHECK (([Status]\u003e\u003d(0) AND [Status]\u003c\u003d(8)))\\r\\nGO\\r\\nALTER TABLE [SalesLT].[SalesOrderHeader] ADD CONSTRAINT [CK_SalesOrderHeader_SubTotal] CHECK (([SubTotal]\u003e\u003d(0.00)))\\r\\nGO\\r\\nALTER TABLE [SalesLT].[SalesOrderHeader] ADD CONSTRAINT [CK_SalesOrderHeader_TaxAmt] CHECK (([TaxAmt]\u003e\u003d(0.00)))\\r\\nGO\\r\\nALTER TABLE [SalesLT].[SalesOrderHeader] ADD CONSTRAINT [PK_SalesOrderHeader_SalesOrderID] PRIMARY KEY CLUSTERED ([SalesOrderID])\\r\\nGO\\r\\nCREATE NONCLUSTERED INDEX [IX_SalesOrderHeader_CustomerID] ON [SalesLT].[SalesOrderHeader] ([CustomerID])\\r\\nGO\\r\\nALTER TABLE [SalesLT].[SalesOrderHeader] ADD CONSTRAINT [AK_SalesOrderHeader_rowguid] UNIQUE NONCLUSTERED ([rowguid])\\r\\nGO\\r\\nALTER TABLE [SalesLT].[SalesOrderHeader] ADD CONSTRAINT [AK_SalesOrderHeader_SalesOrderNumber] UNIQUE NONCLUSTERED ([SalesOrderNumber])\\r\\nGO\\r\\nALTER TABLE [SalesLT].[SalesOrderHeader] ADD CONSTRAINT [FK_SalesOrderHeader_Address_BillTo_AddressID] FOREIGN KEY ([BillToAddressID]) REFERENCES [SalesLT].[Address] ([AddressID])\\r\\nGO\\r\\nALTER TABLE [SalesLT].[SalesOrderHeader] ADD CONSTRAINT [FK_SalesOrderHeader_Address_ShipTo_AddressID] FOREIGN KEY ([ShipToAddressID]) REFERENCES [SalesLT].[Address] ([AddressID])\\r\\nGO\\r\\nALTER TABLE [SalesLT].[SalesOrderHeader] ADD CONSTRAINT [FK_SalesOrderHeader_Customer_CustomerID] FOREIGN KEY ([CustomerID]) REFERENCES [SalesLT].[Customer] ([CustomerID])\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027General sales order information.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, NULL, NULL\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Financial accounting number reference.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027COLUMN\u0027, N\u0027AccountNumber\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027The ID of the location to send invoices.  Foreign key to the Address table.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027COLUMN\u0027, N\u0027BillToAddressID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Sales representative comments.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027COLUMN\u0027, N\u0027Comment\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Approval code provided by the credit card company.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027COLUMN\u0027, N\u0027CreditCardApprovalCode\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Customer identification number. Foreign key to Customer.CustomerID.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027COLUMN\u0027, N\u0027CustomerID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Date the order is due to the customer.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027COLUMN\u0027, N\u0027DueDate\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Shipping cost.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027COLUMN\u0027, N\u0027Freight\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Date and time the record was last updated.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027COLUMN\u0027, N\u0027ModifiedDate\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u00270 \u003d Order placed by sales person. 1 \u003d Order placed online by customer.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027COLUMN\u0027, N\u0027OnlineOrderFlag\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Dates the sales order was created.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027COLUMN\u0027, N\u0027OrderDate\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Customer purchase order number reference. \u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027COLUMN\u0027, N\u0027PurchaseOrderNumber\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Incremental number to track changes to the sales order over time.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027COLUMN\u0027, N\u0027RevisionNumber\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027COLUMN\u0027, N\u0027rowguid\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Primary key.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027COLUMN\u0027, N\u0027SalesOrderID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Unique sales order identification number.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027COLUMN\u0027, N\u0027SalesOrderNumber\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Date the order was shipped to the customer.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027COLUMN\u0027, N\u0027ShipDate\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Shipping method. Foreign key to ShipMethod.ShipMethodID.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027COLUMN\u0027, N\u0027ShipMethod\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027The ID of the location to send goods.  Foreign key to the Address table.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027COLUMN\u0027, N\u0027ShipToAddressID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Order current status. 1 \u003d In process; 2 \u003d Approved; 3 \u003d Backordered; 4 \u003d Rejected; 5 \u003d Shipped; 6 \u003d Cancelled\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027COLUMN\u0027, N\u0027Status\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Sales subtotal. Computed as SUM(SalesOrderDetail.LineTotal)for the appropriate SalesOrderID.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027COLUMN\u0027, N\u0027SubTotal\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Tax amount.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027COLUMN\u0027, N\u0027TaxAmt\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Total due from customer. Computed as Subtotal + TaxAmt + Freight.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027COLUMN\u0027, N\u0027TotalDue\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Unique nonclustered constraint. Used to support replication samples.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027CONSTRAINT\u0027, N\u0027AK_SalesOrderHeader_rowguid\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Unique nonclustered constraint.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027CONSTRAINT\u0027, N\u0027AK_SalesOrderHeader_SalesOrderNumber\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Check constraint [DueDate] \u003e\u003d [OrderDate]\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027CONSTRAINT\u0027, N\u0027CK_SalesOrderHeader_DueDate\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Check constraint [Freight] \u003e\u003d (0.00)\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027CONSTRAINT\u0027, N\u0027CK_SalesOrderHeader_Freight\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Check constraint [ShipDate] \u003e\u003d [OrderDate] OR [ShipDate] IS NULL\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027CONSTRAINT\u0027, N\u0027CK_SalesOrderHeader_ShipDate\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Check constraint [Status] BETWEEN (0) AND (8)\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027CONSTRAINT\u0027, N\u0027CK_SalesOrderHeader_Status\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Check constraint [SubTotal] \u003e\u003d (0.00)\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027CONSTRAINT\u0027, N\u0027CK_SalesOrderHeader_SubTotal\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Check constraint [TaxAmt] \u003e\u003d (0.00)\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027CONSTRAINT\u0027, N\u0027CK_SalesOrderHeader_TaxAmt\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Default constraint value of 0.0\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027CONSTRAINT\u0027, N\u0027DF_SalesOrderHeader_Freight\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Default constraint value of GETDATE()\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027CONSTRAINT\u0027, N\u0027DF_SalesOrderHeader_ModifiedDate\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Default constraint value of 1 (TRUE)\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027CONSTRAINT\u0027, N\u0027DF_SalesOrderHeader_OnlineOrderFlag\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Default constraint value of GETDATE()\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027CONSTRAINT\u0027, N\u0027DF_SalesOrderHeader_OrderDate\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Default constraint value of 0\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027CONSTRAINT\u0027, N\u0027DF_SalesOrderHeader_RevisionNumber\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Default constraint value of NEWID()\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027CONSTRAINT\u0027, N\u0027DF_SalesOrderHeader_rowguid\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Default constraint value of 1\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027CONSTRAINT\u0027, N\u0027DF_SalesOrderHeader_Status\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Default constraint value of 0.0\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027CONSTRAINT\u0027, N\u0027DF_SalesOrderHeader_SubTotal\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Default constraint value of 0.0\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027CONSTRAINT\u0027, N\u0027DF_SalesOrderHeader_TaxAmt\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Foreign key constraint referencing Address.AddressID for BillTo.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027CONSTRAINT\u0027, N\u0027FK_SalesOrderHeader_Address_BillTo_AddressID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Foreign key constraint referencing Address.AddressID for ShipTo.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027CONSTRAINT\u0027, N\u0027FK_SalesOrderHeader_Address_ShipTo_AddressID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Foreign key constraint referencing Customer.CustomerID.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027CONSTRAINT\u0027, N\u0027FK_SalesOrderHeader_Customer_CustomerID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Primary key (clustered) constraint\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027CONSTRAINT\u0027, N\u0027PK_SalesOrderHeader_SalesOrderID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Nonclustered index.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027INDEX\u0027, N\u0027IX_SalesOrderHeader_CustomerID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Clustered index created by a primary key constraint.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027INDEX\u0027, N\u0027PK_SalesOrderHeader_SalesOrderID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027AFTER UPDATE trigger that updates the RevisionNumber and ModifiedDate columns in the SalesOrderHeader table.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027TRIGGER\u0027, N\u0027uSalesOrderHeader\u0027\\r\\nGO\\r\\n"
        },
        {
          "objectType": "Table",
          "name": "BuildVersion",
          "schema": "dbo",
          "definitionBefore": "",
          "definitionAfter": "CREATE TABLE [dbo].[BuildVersion]\\r\\n(\\r\\n[SystemInformationID] [tinyint] NOT NULL IDENTITY(1, 1),\\r\\n[Database Version] [nvarchar] (25) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\\r\\n[VersionDate] [datetime] NOT NULL,\\r\\n[ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_BuildVersion_ModifiedDate] DEFAULT (getdate())\\r\\n)\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Current version number of the AdventureWorksLT 2012 sample database. \u0027, \u0027SCHEMA\u0027, N\u0027dbo\u0027, \u0027TABLE\u0027, N\u0027BuildVersion\u0027, NULL, NULL\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Version number of the database in 9.yy.mm.dd.00 format.\u0027, \u0027SCHEMA\u0027, N\u0027dbo\u0027, \u0027TABLE\u0027, N\u0027BuildVersion\u0027, \u0027COLUMN\u0027, N\u0027Database Version\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Date and time the record was last updated.\u0027, \u0027SCHEMA\u0027, N\u0027dbo\u0027, \u0027TABLE\u0027, N\u0027BuildVersion\u0027, \u0027COLUMN\u0027, N\u0027ModifiedDate\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Primary key for BuildVersion records.\u0027, \u0027SCHEMA\u0027, N\u0027dbo\u0027, \u0027TABLE\u0027, N\u0027BuildVersion\u0027, \u0027COLUMN\u0027, N\u0027SystemInformationID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Date and time the record was last updated.\u0027, \u0027SCHEMA\u0027, N\u0027dbo\u0027, \u0027TABLE\u0027, N\u0027BuildVersion\u0027, \u0027COLUMN\u0027, N\u0027VersionDate\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Default constraint value of GETDATE()\u0027, \u0027SCHEMA\u0027, N\u0027dbo\u0027, \u0027TABLE\u0027, N\u0027BuildVersion\u0027, \u0027CONSTRAINT\u0027, N\u0027DF_BuildVersion_ModifiedDate\u0027\\r\\nGO\\r\\n"
        },
        {
          "objectType": "Table",
          "name": "ErrorLog",
          "schema": "dbo",
          "definitionBefore": "",
          "definitionAfter": "CREATE TABLE [dbo].[ErrorLog]\\r\\n(\\r\\n[ErrorLogID] [int] NOT NULL IDENTITY(1, 1),\\r\\n[ErrorTime] [datetime] NOT NULL CONSTRAINT [DF_ErrorLog_ErrorTime] DEFAULT (getdate()),\\r\\n[UserName] [sys].[sysname] NOT NULL,\\r\\n[ErrorNumber] [int] NOT NULL,\\r\\n[ErrorSeverity] [int] NULL,\\r\\n[ErrorState] [int] NULL,\\r\\n[ErrorProcedure] [nvarchar] (126) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\\r\\n[ErrorLine] [int] NULL,\\r\\n[ErrorMessage] [nvarchar] (4000) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL\\r\\n)\\r\\nGO\\r\\nALTER TABLE [dbo].[ErrorLog] ADD CONSTRAINT [PK_ErrorLog_ErrorLogID] PRIMARY KEY CLUSTERED ([ErrorLogID])\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Audit table tracking errors in the the AdventureWorks database that are caught by the CATCH block of a TRY...CATCH construct. Data is inserted by stored procedure dbo.uspLogError when it is executed from inside the CATCH block of a TRY...CATCH construct.\u0027, \u0027SCHEMA\u0027, N\u0027dbo\u0027, \u0027TABLE\u0027, N\u0027ErrorLog\u0027, NULL, NULL\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027The line number at which the error occurred.\u0027, \u0027SCHEMA\u0027, N\u0027dbo\u0027, \u0027TABLE\u0027, N\u0027ErrorLog\u0027, \u0027COLUMN\u0027, N\u0027ErrorLine\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Primary key for ErrorLog records.\u0027, \u0027SCHEMA\u0027, N\u0027dbo\u0027, \u0027TABLE\u0027, N\u0027ErrorLog\u0027, \u0027COLUMN\u0027, N\u0027ErrorLogID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027The message text of the error that occurred.\u0027, \u0027SCHEMA\u0027, N\u0027dbo\u0027, \u0027TABLE\u0027, N\u0027ErrorLog\u0027, \u0027COLUMN\u0027, N\u0027ErrorMessage\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027The error number of the error that occurred.\u0027, \u0027SCHEMA\u0027, N\u0027dbo\u0027, \u0027TABLE\u0027, N\u0027ErrorLog\u0027, \u0027COLUMN\u0027, N\u0027ErrorNumber\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027The name of the stored procedure or trigger where the error occurred.\u0027, \u0027SCHEMA\u0027, N\u0027dbo\u0027, \u0027TABLE\u0027, N\u0027ErrorLog\u0027, \u0027COLUMN\u0027, N\u0027ErrorProcedure\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027The severity of the error that occurred.\u0027, \u0027SCHEMA\u0027, N\u0027dbo\u0027, \u0027TABLE\u0027, N\u0027ErrorLog\u0027, \u0027COLUMN\u0027, N\u0027ErrorSeverity\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027The state number of the error that occurred.\u0027, \u0027SCHEMA\u0027, N\u0027dbo\u0027, \u0027TABLE\u0027, N\u0027ErrorLog\u0027, \u0027COLUMN\u0027, N\u0027ErrorState\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027The date and time at which the error occurred.\u0027, \u0027SCHEMA\u0027, N\u0027dbo\u0027, \u0027TABLE\u0027, N\u0027ErrorLog\u0027, \u0027COLUMN\u0027, N\u0027ErrorTime\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027The user who executed the batch in which the error occurred.\u0027, \u0027SCHEMA\u0027, N\u0027dbo\u0027, \u0027TABLE\u0027, N\u0027ErrorLog\u0027, \u0027COLUMN\u0027, N\u0027UserName\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Default constraint value of GETDATE()\u0027, \u0027SCHEMA\u0027, N\u0027dbo\u0027, \u0027TABLE\u0027, N\u0027ErrorLog\u0027, \u0027CONSTRAINT\u0027, N\u0027DF_ErrorLog_ErrorTime\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Primary key (clustered) constraint\u0027, \u0027SCHEMA\u0027, N\u0027dbo\u0027, \u0027TABLE\u0027, N\u0027ErrorLog\u0027, \u0027CONSTRAINT\u0027, N\u0027PK_ErrorLog_ErrorLogID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Clustered index created by a primary key constraint.\u0027, \u0027SCHEMA\u0027, N\u0027dbo\u0027, \u0027TABLE\u0027, N\u0027ErrorLog\u0027, \u0027INDEX\u0027, N\u0027PK_ErrorLog_ErrorLogID\u0027\\r\\nGO\\r\\n"
        },
        {
          "objectType": "StoredProcedure",
          "name": "uspLogError",
          "schema": "dbo",
          "definitionBefore": "",
          "definitionAfter": "-- uspLogError logs error information in the ErrorLog table about the \\r\\n-- error that caused execution to jump to the CATCH block of a \\r\\n-- TRY...CATCH construct. This should be executed from within the scope \\r\\n-- of a CATCH block otherwise it will return without inserting error \\r\\n-- information. \\r\\nCREATE PROCEDURE [dbo].[uspLogError] \\r\\n    @ErrorLogID [int] \u003d 0 OUTPUT -- contains the ErrorLogID of the row inserted\\r\\nAS                               -- by uspLogError in the ErrorLog table\\r\\nBEGIN\\r\\n    SET NOCOUNT ON;\\r\\n\\r\\n    -- Output parameter value of 0 indicates that error \\r\\n    -- information was not logged\\r\\n    SET @ErrorLogID \u003d 0;\\r\\n\\r\\n    BEGIN TRY\\r\\n        -- Return if there is no error information to log\\r\\n        IF ERROR_NUMBER() IS NULL\\r\\n            RETURN;\\r\\n\\r\\n        -- Return if inside an uncommittable transaction.\\r\\n        -- Data insertion/modification is not allowed when \\r\\n        -- a transaction is in an uncommittable state.\\r\\n        IF XACT_STATE() \u003d -1\\r\\n        BEGIN\\r\\n            PRINT \u0027Cannot log error since the current transaction is in an uncommittable state. \u0027 \\r\\n                + \u0027Rollback the transaction before executing uspLogError in order to successfully log error information.\u0027;\\r\\n            RETURN;\\r\\n        END\\r\\n\\r\\n        INSERT [dbo].[ErrorLog] \\r\\n            (\\r\\n            [UserName], \\r\\n            [ErrorNumber], \\r\\n            [ErrorSeverity], \\r\\n            [ErrorState], \\r\\n            [ErrorProcedure], \\r\\n            [ErrorLine], \\r\\n            [ErrorMessage]\\r\\n            ) \\r\\n        VALUES \\r\\n            (\\r\\n            CONVERT(sysname, CURRENT_USER), \\r\\n            ERROR_NUMBER(),\\r\\n            ERROR_SEVERITY(),\\r\\n            ERROR_STATE(),\\r\\n            ERROR_PROCEDURE(),\\r\\n            ERROR_LINE(),\\r\\n            ERROR_MESSAGE()\\r\\n            );\\r\\n\\r\\n        -- Pass back the ErrorLogID of the row inserted\\r\\n        SET @ErrorLogID \u003d @@IDENTITY;\\r\\n    END TRY\\r\\n    BEGIN CATCH\\r\\n        PRINT \u0027An error occurred in stored procedure uspLogError: \u0027;\\r\\n        EXECUTE [dbo].[uspPrintError];\\r\\n        RETURN -1;\\r\\n    END CATCH\\r\\nEND;\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Logs error information in the ErrorLog table about the error that caused execution to jump to the CATCH block of a TRY...CATCH construct. Should be executed from within the scope of a CATCH block otherwise it will return without inserting error information.\u0027, \u0027SCHEMA\u0027, N\u0027dbo\u0027, \u0027PROCEDURE\u0027, N\u0027uspLogError\u0027, NULL, NULL\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Output parameter for the stored procedure uspLogError. Contains the ErrorLogID value corresponding to the row inserted by uspLogError in the ErrorLog table.\u0027, \u0027SCHEMA\u0027, N\u0027dbo\u0027, \u0027PROCEDURE\u0027, N\u0027uspLogError\u0027, \u0027PARAMETER\u0027, N\u0027@ErrorLogID\u0027\\r\\nGO\\r\\n"
        },
        {
          "objectType": "StoredProcedure",
          "name": "uspPrintError",
          "schema": "dbo",
          "definitionBefore": "",
          "definitionAfter": "-- uspPrintError prints error information about the error that caused \\r\\n-- execution to jump to the CATCH block of a TRY...CATCH construct. \\r\\n-- Should be executed from within the scope of a CATCH block otherwise \\r\\n-- it will return without printing any error information.\\r\\nCREATE PROCEDURE [dbo].[uspPrintError] \\r\\nAS\\r\\nBEGIN\\r\\n    SET NOCOUNT ON;\\r\\n\\r\\n    -- Print error information. \\r\\n    PRINT \u0027Error \u0027 + CONVERT(varchar(50), ERROR_NUMBER()) +\\r\\n          \u0027, Severity \u0027 + CONVERT(varchar(5), ERROR_SEVERITY()) +\\r\\n          \u0027, State \u0027 + CONVERT(varchar(5), ERROR_STATE()) + \\r\\n          \u0027, Procedure \u0027 + ISNULL(ERROR_PROCEDURE(), \u0027-\u0027) + \\r\\n          \u0027, Line \u0027 + CONVERT(varchar(5), ERROR_LINE());\\r\\n    PRINT ERROR_MESSAGE();\\r\\nEND;\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Prints error information about the error that caused execution to jump to the CATCH block of a TRY...CATCH construct. Should be executed from within the scope of a CATCH block otherwise it will return without printing any error information.\u0027, \u0027SCHEMA\u0027, N\u0027dbo\u0027, \u0027PROCEDURE\u0027, N\u0027uspPrintError\u0027, NULL, NULL\\r\\nGO\\r\\n"
        },
        {
          "objectType": "View",
          "name": "vGetAllCategories",
          "schema": "SalesLT",
          "definitionBefore": "",
          "definitionAfter": "CREATE VIEW [SalesLT].[vGetAllCategories]\\r\\nWITH SCHEMABINDING \\r\\nAS \\r\\n-- Returns the CustomerID, first name, and last name for the specified customer.\\r\\n\\r\\nWITH CategoryCTE([ParentProductCategoryID], [ProductCategoryID], [Name]) AS \\r\\n(\\r\\n\\tSELECT [ParentProductCategoryID], [ProductCategoryID], [Name]\\r\\n\\tFROM SalesLT.ProductCategory\\r\\n\\tWHERE ParentProductCategoryID IS NULL\\r\\n\\r\\nUNION ALL\\r\\n\\r\\n\\tSELECT C.[ParentProductCategoryID], C.[ProductCategoryID], C.[Name]\\r\\n\\tFROM SalesLT.ProductCategory AS C\\r\\n\\tINNER JOIN CategoryCTE AS BC ON BC.ProductCategoryID \u003d C.ParentProductCategoryID\\r\\n)\\r\\n\\r\\nSELECT PC.[Name] AS [ParentProductCategoryName], CCTE.[Name] as [ProductCategoryName], CCTE.[ProductCategoryID]  \\r\\nFROM CategoryCTE AS CCTE\\r\\nJOIN SalesLT.ProductCategory AS PC \\r\\nON PC.[ProductCategoryID] \u003d CCTE.[ParentProductCategoryID]\\r\\nGO\\r\\n"
        },
        {
          "objectType": "View",
          "name": "vProductAndDescription",
          "schema": "SalesLT",
          "definitionBefore": "",
          "definitionAfter": "CREATE VIEW [SalesLT].[vProductAndDescription] \\r\\nWITH SCHEMABINDING \\r\\nAS \\r\\n-- View (indexed or standard) to display products and product descriptions by language.\\r\\nSELECT \\r\\n    p.[ProductID] \\r\\n    ,p.[Name] \\r\\n    ,pm.[Name] AS [ProductModel] \\r\\n    ,pmx.[Culture] \\r\\n    ,pd.[Description] \\r\\nFROM [SalesLT].[Product] p \\r\\n    INNER JOIN [SalesLT].[ProductModel] pm \\r\\n    ON p.[ProductModelID] \u003d pm.[ProductModelID] \\r\\n    INNER JOIN [SalesLT].[ProductModelProductDescription] pmx \\r\\n    ON pm.[ProductModelID] \u003d pmx.[ProductModelID] \\r\\n    INNER JOIN [SalesLT].[ProductDescription] pd \\r\\n    ON pmx.[ProductDescriptionID] \u003d pd.[ProductDescriptionID];\\r\\nGO\\r\\nCREATE UNIQUE CLUSTERED INDEX [IX_vProductAndDescription] ON [SalesLT].[vProductAndDescription] ([Culture], [ProductID])\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Product names and descriptions. Product descriptions are provided in multiple languages.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027VIEW\u0027, N\u0027vProductAndDescription\u0027, NULL, NULL\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Clustered index on the view vProductAndDescription.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027VIEW\u0027, N\u0027vProductAndDescription\u0027, \u0027INDEX\u0027, N\u0027IX_vProductAndDescription\u0027\\r\\nGO\\r\\n"
        },
        {
          "objectType": "View",
          "name": "vProductModelCatalogDescription",
          "schema": "SalesLT",
          "definitionBefore": "",
          "definitionAfter": "CREATE VIEW [SalesLT].[vProductModelCatalogDescription] \\r\\nAS \\r\\nSELECT \\r\\n    [ProductModelID] \\r\\n    ,[Name] \\r\\n    ,[CatalogDescription].value(N\u0027declare namespace p1\u003dhttp://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription; \\r\\n        declare namespace html\u003dhttp://www.w3.org/1999/xhtml; \\r\\n        (/p1:ProductDescription/p1:Summary/html:p)[1]\u0027, \u0027nvarchar(max)\u0027) AS [Summary] \\r\\n    ,[CatalogDescription].value(N\u0027declare namespace p1\u003dhttp://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription; \\r\\n        (/p1:ProductDescription/p1:Manufacturer/p1:Name)[1]\u0027, \u0027nvarchar(max)\u0027) AS [Manufacturer] \\r\\n    ,[CatalogDescription].value(N\u0027declare namespace p1\u003dhttp://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription; \\r\\n        (/p1:ProductDescription/p1:Manufacturer/p1:Copyright)[1]\u0027, \u0027nvarchar(30)\u0027) AS [Copyright] \\r\\n    ,[CatalogDescription].value(N\u0027declare namespace p1\u003dhttp://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription; \\r\\n        (/p1:ProductDescription/p1:Manufacturer/p1:ProductURL)[1]\u0027, \u0027nvarchar(256)\u0027) AS [ProductURL] \\r\\n    ,[CatalogDescription].value(N\u0027declare namespace p1\u003dhttp://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription; \\r\\n        declare namespace wm\u003dhttp://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelWarrAndMain; \\r\\n        (/p1:ProductDescription/p1:Features/wm:Warranty/wm:WarrantyPeriod)[1]\u0027, \u0027nvarchar(256)\u0027) AS [WarrantyPeriod] \\r\\n    ,[CatalogDescription].value(N\u0027declare namespace p1\u003dhttp://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription; \\r\\n        declare namespace wm\u003dhttp://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelWarrAndMain; \\r\\n        (/p1:ProductDescription/p1:Features/wm:Warranty/wm:Description)[1]\u0027, \u0027nvarchar(256)\u0027) AS [WarrantyDescription] \\r\\n    ,[CatalogDescription].value(N\u0027declare namespace p1\u003dhttp://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription; \\r\\n        declare namespace wm\u003dhttp://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelWarrAndMain; \\r\\n        (/p1:ProductDescription/p1:Features/wm:Maintenance/wm:NoOfYears)[1]\u0027, \u0027nvarchar(256)\u0027) AS [NoOfYears] \\r\\n    ,[CatalogDescription].value(N\u0027declare namespace p1\u003dhttp://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription; \\r\\n        declare namespace wm\u003dhttp://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelWarrAndMain; \\r\\n        (/p1:ProductDescription/p1:Features/wm:Maintenance/wm:Description)[1]\u0027, \u0027nvarchar(256)\u0027) AS [MaintenanceDescription] \\r\\n    ,[CatalogDescription].value(N\u0027declare namespace p1\u003dhttp://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription; \\r\\n        declare namespace wf\u003dhttp://www.adventure-works.com/schemas/OtherFeatures; \\r\\n        (/p1:ProductDescription/p1:Features/wf:wheel)[1]\u0027, \u0027nvarchar(256)\u0027) AS [Wheel] \\r\\n    ,[CatalogDescription].value(N\u0027declare namespace p1\u003dhttp://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription; \\r\\n        declare namespace wf\u003dhttp://www.adventure-works.com/schemas/OtherFeatures; \\r\\n        (/p1:ProductDescription/p1:Features/wf:saddle)[1]\u0027, \u0027nvarchar(256)\u0027) AS [Saddle] \\r\\n    ,[CatalogDescription].value(N\u0027declare namespace p1\u003dhttp://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription; \\r\\n        declare namespace wf\u003dhttp://www.adventure-works.com/schemas/OtherFeatures; \\r\\n        (/p1:ProductDescription/p1:Features/wf:pedal)[1]\u0027, \u0027nvarchar(256)\u0027) AS [Pedal] \\r\\n    ,[CatalogDescription].value(N\u0027declare namespace p1\u003dhttp://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription; \\r\\n        declare namespace wf\u003dhttp://www.adventure-works.com/schemas/OtherFeatures; \\r\\n        (/p1:ProductDescription/p1:Features/wf:BikeFrame)[1]\u0027, \u0027nvarchar(max)\u0027) AS [BikeFrame] \\r\\n    ,[CatalogDescription].value(N\u0027declare namespace p1\u003dhttp://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription; \\r\\n        declare namespace wf\u003dhttp://www.adventure-works.com/schemas/OtherFeatures; \\r\\n        (/p1:ProductDescription/p1:Features/wf:crankset)[1]\u0027, \u0027nvarchar(256)\u0027) AS [Crankset] \\r\\n    ,[CatalogDescription].value(N\u0027declare namespace p1\u003dhttp://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription; \\r\\n        (/p1:ProductDescription/p1:Picture/p1:Angle)[1]\u0027, \u0027nvarchar(256)\u0027) AS [PictureAngle] \\r\\n    ,[CatalogDescription].value(N\u0027declare namespace p1\u003dhttp://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription; \\r\\n        (/p1:ProductDescription/p1:Picture/p1:Size)[1]\u0027, \u0027nvarchar(256)\u0027) AS [PictureSize] \\r\\n    ,[CatalogDescription].value(N\u0027declare namespace p1\u003dhttp://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription; \\r\\n        (/p1:ProductDescription/p1:Picture/p1:ProductPhotoID)[1]\u0027, \u0027nvarchar(256)\u0027) AS [ProductPhotoID] \\r\\n    ,[CatalogDescription].value(N\u0027declare namespace p1\u003dhttp://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription; \\r\\n        (/p1:ProductDescription/p1:Specifications/Material)[1]\u0027, \u0027nvarchar(256)\u0027) AS [Material] \\r\\n    ,[CatalogDescription].value(N\u0027declare namespace p1\u003dhttp://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription; \\r\\n        (/p1:ProductDescription/p1:Specifications/Color)[1]\u0027, \u0027nvarchar(256)\u0027) AS [Color] \\r\\n    ,[CatalogDescription].value(N\u0027declare namespace p1\u003dhttp://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription; \\r\\n        (/p1:ProductDescription/p1:Specifications/ProductLine)[1]\u0027, \u0027nvarchar(256)\u0027) AS [ProductLine] \\r\\n    ,[CatalogDescription].value(N\u0027declare namespace p1\u003dhttp://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription; \\r\\n        (/p1:ProductDescription/p1:Specifications/Style)[1]\u0027, \u0027nvarchar(256)\u0027) AS [Style] \\r\\n    ,[CatalogDescription].value(N\u0027declare namespace p1\u003dhttp://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription; \\r\\n        (/p1:ProductDescription/p1:Specifications/RiderExperience)[1]\u0027, \u0027nvarchar(1024)\u0027) AS [RiderExperience] \\r\\n    ,[rowguid] \\r\\n    ,[ModifiedDate]\\r\\nFROM [SalesLT].[ProductModel] \\r\\nWHERE [CatalogDescription] IS NOT NULL;\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Displays the content from each element in the xml column CatalogDescription for each product in the Sales.ProductModel table that has catalog data.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027VIEW\u0027, N\u0027vProductModelCatalogDescription\u0027, NULL, NULL\\r\\nGO\\r\\n"
        },
        {
          "objectType": "Function",
          "name": "ufnGetAllCategories",
          "schema": "dbo",
          "definitionBefore": "",
          "definitionAfter": "-- DROP FUNCTION [dbo].[ufnGetAllCategories]\\r\\n\\r\\nCREATE FUNCTION [dbo].[ufnGetAllCategories]()\\r\\nRETURNS @retCategoryInformation TABLE \\r\\n(\\r\\n    -- Columns returned by the function\\r\\n    [ParentProductCategoryName] [nvarchar](50) NULL, \\r\\n    [ProductCategoryName] [nvarchar](50) NOT NULL,\\r\\n\\t[ProductCategoryID] [int] NOT NULL\\r\\n)\\r\\nAS \\r\\n-- Returns the CustomerID, first name, and last name for the specified customer.\\r\\nBEGIN\\r\\n\\tWITH CategoryCTE([ParentProductCategoryID], [ProductCategoryID], [Name]) AS \\r\\n\\t(\\r\\n\\t\\tSELECT [ParentProductCategoryID], [ProductCategoryID], [Name]\\r\\n\\t\\tFROM SalesLT.ProductCategory\\r\\n\\t\\tWHERE ParentProductCategoryID IS NULL\\r\\n\\r\\n\\tUNION ALL\\r\\n\\r\\n\\t\\tSELECT C.[ParentProductCategoryID], C.[ProductCategoryID], C.[Name]\\r\\n\\t\\tFROM SalesLT.ProductCategory AS C\\r\\n\\t\\tINNER JOIN CategoryCTE AS BC ON BC.ProductCategoryID \u003d C.ParentProductCategoryID\\r\\n\\t)\\r\\n\\r\\n\\tINSERT INTO @retCategoryInformation\\r\\n\\tSELECT PC.[Name] AS [ParentProductCategoryName], CCTE.[Name] as [ProductCategoryName], CCTE.[ProductCategoryID]  \\r\\n\\tFROM CategoryCTE AS CCTE\\r\\n\\tJOIN SalesLT.ProductCategory AS PC \\r\\n\\tON PC.[ProductCategoryID] \u003d CCTE.[ParentProductCategoryID];\\r\\n\\tRETURN;\\r\\nEND;\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Table value function returning every product category and its parent, if applicable.\u0027, \u0027SCHEMA\u0027, N\u0027dbo\u0027, \u0027FUNCTION\u0027, N\u0027ufnGetAllCategories\u0027, NULL, NULL\\r\\nGO\\r\\n"
        },
        {
          "objectType": "Function",
          "name": "ufnGetCustomerInformation",
          "schema": "dbo",
          "definitionBefore": "",
          "definitionAfter": "CREATE FUNCTION [dbo].[ufnGetCustomerInformation](@CustomerID int)\\r\\nRETURNS TABLE \\r\\nAS \\r\\n-- Returns the CustomerID, first name, and last name for the specified customer.\\r\\nRETURN (\\r\\n    SELECT \\r\\n        CustomerID, \\r\\n        FirstName, \\r\\n        LastName\\r\\n    FROM [SalesLT].[Customer] \\r\\n    WHERE [CustomerID] \u003d @CustomerID\\r\\n);\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Table value function returning the customer ID, first name, and last name for a given customer.\u0027, \u0027SCHEMA\u0027, N\u0027dbo\u0027, \u0027FUNCTION\u0027, N\u0027ufnGetCustomerInformation\u0027, NULL, NULL\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Input parameter for the table value function ufnGetCustomerInformation. Enter a valid CustomerID from the Sales.Customer table.\u0027, \u0027SCHEMA\u0027, N\u0027dbo\u0027, \u0027FUNCTION\u0027, N\u0027ufnGetCustomerInformation\u0027, \u0027PARAMETER\u0027, N\u0027@CustomerID\u0027\\r\\nGO\\r\\n"
        },
        {
          "objectType": "Function",
          "name": "ufnGetSalesOrderStatusText",
          "schema": "dbo",
          "definitionBefore": "",
          "definitionAfter": "CREATE FUNCTION [dbo].[ufnGetSalesOrderStatusText](@Status [tinyint])\\r\\nRETURNS [nvarchar](15) \\r\\nAS \\r\\n-- Returns the sales order status text representation for the status value.\\r\\nBEGIN\\r\\n    DECLARE @ret [nvarchar](15);\\r\\n\\r\\n    SET @ret \u003d \\r\\n        CASE @Status\\r\\n            WHEN 1 THEN \u0027In process\u0027\\r\\n            WHEN 2 THEN \u0027Approved\u0027\\r\\n            WHEN 3 THEN \u0027Backordered\u0027\\r\\n            WHEN 4 THEN \u0027Rejected\u0027\\r\\n            WHEN 5 THEN \u0027Shipped\u0027\\r\\n            WHEN 6 THEN \u0027Cancelled\u0027\\r\\n            ELSE \u0027** Invalid **\u0027\\r\\n        END;\\r\\n    \\r\\n    RETURN @ret\\r\\nEND;\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Scalar function returning the text representation of the Status column in the SalesOrderHeader table.\u0027, \u0027SCHEMA\u0027, N\u0027dbo\u0027, \u0027FUNCTION\u0027, N\u0027ufnGetSalesOrderStatusText\u0027, NULL, NULL\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Input parameter for the scalar function ufnGetSalesOrderStatusText. Enter a valid integer.\u0027, \u0027SCHEMA\u0027, N\u0027dbo\u0027, \u0027FUNCTION\u0027, N\u0027ufnGetSalesOrderStatusText\u0027, \u0027PARAMETER\u0027, N\u0027@Status\u0027\\r\\nGO\\r\\n"
        },
        {
          "objectType": "UserDefinedType",
          "name": "AccountNumber",
          "schema": "dbo",
          "definitionBefore": "",
          "definitionAfter": "CREATE TYPE [dbo].[AccountNumber] FROM nvarchar (15) NULL\\r\\nGO\\r\\n"
        },
        {
          "objectType": "UserDefinedType",
          "name": "Flag",
          "schema": "dbo",
          "definitionBefore": "",
          "definitionAfter": "CREATE TYPE [dbo].[Flag] FROM bit NOT NULL\\r\\nGO\\r\\n"
        },
        {
          "objectType": "UserDefinedType",
          "name": "NameStyle",
          "schema": "dbo",
          "definitionBefore": "",
          "definitionAfter": "CREATE TYPE [dbo].[NameStyle] FROM bit NOT NULL\\r\\nGO\\r\\n"
        },
        {
          "objectType": "UserDefinedType",
          "name": "Name",
          "schema": "dbo",
          "definitionBefore": "",
          "definitionAfter": "CREATE TYPE [dbo].[Name] FROM nvarchar (50) NULL\\r\\nGO\\r\\n"
        },
        {
          "objectType": "UserDefinedType",
          "name": "OrderNumber",
          "schema": "dbo",
          "definitionBefore": "",
          "definitionAfter": "CREATE TYPE [dbo].[OrderNumber] FROM nvarchar (25) NULL\\r\\nGO\\r\\n"
        },
        {
          "objectType": "UserDefinedType",
          "name": "Phone",
          "schema": "dbo",
          "definitionBefore": "",
          "definitionAfter": "CREATE TYPE [dbo].[Phone] FROM nvarchar (25) NULL\\r\\nGO\\r\\n"
        },
        {
          "objectType": "XmlSchemaCollection",
          "name": "ProductDescriptionSchemaCollection",
          "schema": "SalesLT",
          "definitionBefore": "",
          "definitionAfter": "CREATE XML SCHEMA COLLECTION [SalesLT].[ProductDescriptionSchemaCollection]\\r\\nAS N\u0027\u003cxsd:schema xmlns:xsd\u003dhttp://www.w3.org/2001/XMLSchema xmlns:t\u003dhttp://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelWarrAndMain targetNamespace\u003dhttp://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelWarrAndMain elementFormDefault\u003dqualified\u003e\\r\\n  \u003cxsd:element name\u003dMaintenance\u003e\\r\\n    \u003cxsd:complexType\u003e\\r\\n      \u003cxsd:complexContent\u003e\\r\\n        \u003cxsd:restriction base\u003dxsd:anyType\u003e\\r\\n          \u003cxsd:sequence\u003e\\r\\n            \u003cxsd:element name\u003dNoOfYears type\u003dxsd:string /\u003e\\r\\n            \u003cxsd:element name\u003dDescription type\u003dxsd:string /\u003e\\r\\n          \u003c/xsd:sequence\u003e\\r\\n        \u003c/xsd:restriction\u003e\\r\\n      \u003c/xsd:complexContent\u003e\\r\\n    \u003c/xsd:complexType\u003e\\r\\n  \u003c/xsd:element\u003e\\r\\n  \u003cxsd:element name\u003dWarranty\u003e\\r\\n    \u003cxsd:complexType\u003e\\r\\n      \u003cxsd:complexContent\u003e\\r\\n        \u003cxsd:restriction base\u003dxsd:anyType\u003e\\r\\n          \u003cxsd:sequence\u003e\\r\\n            \u003cxsd:element name\u003dWarrantyPeriod type\u003dxsd:string /\u003e\\r\\n            \u003cxsd:element name\u003dDescription type\u003dxsd:string /\u003e\\r\\n          \u003c/xsd:sequence\u003e\\r\\n        \u003c/xsd:restriction\u003e\\r\\n      \u003c/xsd:complexContent\u003e\\r\\n    \u003c/xsd:complexType\u003e\\r\\n  \u003c/xsd:element\u003e\\r\\n\u003c/xsd:schema\u003e\\r\\n\u003cxsd:schema xmlns:xsd\u003dhttp://www.w3.org/2001/XMLSchema xmlns:ns1\u003dhttp://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelWarrAndMain xmlns:t\u003dhttp://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription targetNamespace\u003dhttp://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription elementFormDefault\u003dqualified\u003e\\r\\n  \u003cxsd:import namespace\u003dhttp://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelWarrAndMain /\u003e\\r\\n  \u003cxsd:element name\u003dCode type\u003dxsd:string /\u003e\\r\\n  \u003cxsd:element name\u003dDescription type\u003dxsd:string /\u003e\\r\\n  \u003cxsd:element name\u003dProductDescription type\u003dt:ProductDescription /\u003e\\r\\n  \u003cxsd:element name\u003dTaxonomy type\u003dxsd:string /\u003e\\r\\n  \u003cxsd:complexType name\u003dCategory\u003e\\r\\n    \u003cxsd:complexContent\u003e\\r\\n      \u003cxsd:restriction base\u003dxsd:anyType\u003e\\r\\n        \u003cxsd:sequence\u003e\\r\\n          \u003cxsd:element ref\u003dt:Taxonomy /\u003e\\r\\n          \u003cxsd:element ref\u003dt:Code /\u003e\\r\\n          \u003cxsd:element ref\u003dt:Description minOccurs\u003d0 /\u003e\\r\\n        \u003c/xsd:sequence\u003e\\r\\n      \u003c/xsd:restriction\u003e\\r\\n    \u003c/xsd:complexContent\u003e\\r\\n  \u003c/xsd:complexType\u003e\\r\\n  \u003cxsd:complexType name\u003dFeatures mixed\u003dtrue\u003e\\r\\n    \u003cxsd:complexContent mixed\u003dtrue\u003e\\r\\n      \u003cxsd:restriction base\u003dxsd:anyType\u003e\\r\\n        \u003cxsd:sequence\u003e\\r\\n          \u003cxsd:element ref\u003dns1:Warranty /\u003e\\r\\n          \u003cxsd:element ref\u003dns1:Maintenance /\u003e\\r\\n          \u003cxsd:any namespace\u003d##other processContents\u003dskip minOccurs\u003d0 maxOccurs\u003dunbounded /\u003e\\r\\n        \u003c/xsd:sequence\u003e\\r\\n      \u003c/xsd:restriction\u003e\\r\\n    \u003c/xsd:complexContent\u003e\\r\\n  \u003c/xsd:complexType\u003e\\r\\n  \u003cxsd:complexType name\u003dManufacturer\u003e\\r\\n    \u003cxsd:complexContent\u003e\\r\\n      \u003cxsd:restriction base\u003dxsd:anyType\u003e\\r\\n        \u003cxsd:sequence\u003e\\r\\n          \u003cxsd:element name\u003dName type\u003dxsd:string minOccurs\u003d0 /\u003e\\r\\n          \u003cxsd:element name\u003dCopyrightURL type\u003dxsd:string minOccurs\u003d0 /\u003e\\r\\n          \u003cxsd:element name\u003dCopyright type\u003dxsd:string minOccurs\u003d0 /\u003e\\r\\n          \u003cxsd:element name\u003dProductURL type\u003dxsd:string minOccurs\u003d0 /\u003e\\r\\n        \u003c/xsd:sequence\u003e\\r\\n      \u003c/xsd:restriction\u003e\\r\\n    \u003c/xsd:complexContent\u003e\\r\\n  \u003c/xsd:complexType\u003e\\r\\n  \u003cxsd:complexType name\u003dPicture\u003e\\r\\n    \u003cxsd:complexContent\u003e\\r\\n      \u003cxsd:restriction base\u003dxsd:anyType\u003e\\r\\n        \u003cxsd:sequence\u003e\\r\\n          \u003cxsd:element name\u003dName type\u003dxsd:string minOccurs\u003d0 /\u003e\\r\\n          \u003cxsd:element name\u003dAngle type\u003dxsd:string minOccurs\u003d0 /\u003e\\r\\n          \u003cxsd:element name\u003dSize type\u003dxsd:string minOccurs\u003d0 /\u003e\\r\\n          \u003cxsd:element name\u003dProductPhotoID type\u003dxsd:integer minOccurs\u003d0 /\u003e\\r\\n        \u003c/xsd:sequence\u003e\\r\\n      \u003c/xsd:restriction\u003e\\r\\n    \u003c/xsd:complexContent\u003e\\r\\n  \u003c/xsd:complexType\u003e\\r\\n  \u003cxsd:complexType name\u003dProductDescription\u003e\\r\\n    \u003cxsd:complexContent\u003e\\r\\n      \u003cxsd:restriction base\u003dxsd:anyType\u003e\\r\\n        \u003cxsd:sequence\u003e\\r\\n          \u003cxsd:element name\u003dSummary type\u003dt:Summary minOccurs\u003d0 /\u003e\\r\\n          \u003cxsd:element name\u003dManufacturer type\u003dt:Manufacturer minOccurs\u003d0 /\u003e\\r\\n          \u003cxsd:element name\u003dFeatures type\u003dt:Features minOccurs\u003d0 maxOccurs\u003dunbounded /\u003e\\r\\n          \u003cxsd:element name\u003dPicture type\u003dt:Picture minOccurs\u003d0 maxOccurs\u003dunbounded /\u003e\\r\\n          \u003cxsd:element name\u003dCategory type\u003dt:Category minOccurs\u003d0 maxOccurs\u003dunbounded /\u003e\\r\\n          \u003cxsd:element name\u003dSpecifications type\u003dt:Specifications minOccurs\u003d0 maxOccurs\u003dunbounded /\u003e\\r\\n        \u003c/xsd:sequence\u003e\\r\\n        \u003cxsd:attribute name\u003dProductModelID type\u003dxsd:string /\u003e\\r\\n        \u003cxsd:attribute name\u003dProductModelName type\u003dxsd:string /\u003e\\r\\n      \u003c/xsd:restriction\u003e\\r\\n    \u003c/xsd:complexContent\u003e\\r\\n  \u003c/xsd:complexType\u003e\\r\\n  \u003cxsd:complexType name\u003dSpecifications mixed\u003dtrue\u003e\\r\\n    \u003cxsd:complexContent mixed\u003dtrue\u003e\\r\\n      \u003cxsd:restriction base\u003dxsd:anyType\u003e\\r\\n        \u003cxsd:sequence\u003e\\r\\n          \u003cxsd:any processContents\u003dskip minOccurs\u003d0 maxOccurs\u003dunbounded /\u003e\\r\\n        \u003c/xsd:sequence\u003e\\r\\n      \u003c/xsd:restriction\u003e\\r\\n    \u003c/xsd:complexContent\u003e\\r\\n  \u003c/xsd:complexType\u003e\\r\\n  \u003cxsd:complexType name\u003dSummary mixed\u003dtrue\u003e\\r\\n    \u003cxsd:complexContent mixed\u003dtrue\u003e\\r\\n      \u003cxsd:restriction base\u003dxsd:anyType\u003e\\r\\n        \u003cxsd:sequence\u003e\\r\\n          \u003cxsd:any namespace\u003dhttp://www.w3.org/1999/xhtml processContents\u003dskip minOccurs\u003d0 maxOccurs\u003dunbounded /\u003e\\r\\n        \u003c/xsd:sequence\u003e\\r\\n      \u003c/xsd:restriction\u003e\\r\\n    \u003c/xsd:complexContent\u003e\\r\\n  \u003c/xsd:complexType\u003e\\r\\n\u003c/xsd:schema\u003e\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Collection of XML schemas for the CatalogDescription column in the Sales.ProductModel table.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027XML SCHEMA COLLECTION\u0027, N\u0027ProductDescriptionSchemaCollection\u0027, NULL, NULL\\r\\nGO\\r\\n"
        },
        {
          "objectType": "Schema",
          "name": "SalesLT",
          "schema": "dbo",
          "definitionBefore": "",
          "definitionAfter": "CREATE SCHEMA [SalesLT]\\r\\nAUTHORIZATION [dbo]\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Contains objects related to products, customers, sales orders, and sales territories.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, NULL, NULL, NULL, NULL\\r\\nGO\\r\\n"
        },
        {
          "objectType": "ExtendedProperty",
          "name": "MS_Description",
          "schema": "null",
          "definitionBefore": "",
          "definitionAfter": "EXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027AdventureWorksLT 2012 Sample OLTP Database\u0027, NULL, NULL, NULL, NULL, NULL, NULL\\r\\nGO\\r\\n"
        }
      ],
      "differences": [],
      "database": "AdventureWorksLT2019",
      "timestamp": "2023-02-24T12:20:20.331422700",
      "operation": "changes"
    },
    {
      "driftDetected": true,
      "onlyInSource": [],
      "onlyInTarget": [
        {
          "objectType": "Table",
          "name": "Address",
          "schema": "SalesLT",
          "definitionBefore": "",
          "definitionAfter": "CREATE TABLE [SalesLT].[Address]\\r\\n(\\r\\n[AddressID] [int] NOT NULL IDENTITY(1, 1) NOT FOR REPLICATION,\\r\\n[AddressLine1] [nvarchar] (60) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\\r\\n[AddressLine2] [nvarchar] (60) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\\r\\n[City] [nvarchar] (30) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\\r\\n[StateProvince] [dbo].[Name] NOT NULL,\\r\\n[CountryRegion] [dbo].[Name] NOT NULL,\\r\\n[PostalCode] [nvarchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\\r\\n[rowguid] [uniqueidentifier] NOT NULL ROWGUIDCOL CONSTRAINT [DF_Address_rowguid] DEFAULT (newid()),\\r\\n[ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_Address_ModifiedDate] DEFAULT (getdate())\\r\\n)\\r\\nGO\\r\\nALTER TABLE [SalesLT].[Address] ADD CONSTRAINT [PK_Address_AddressID] PRIMARY KEY CLUSTERED ([AddressID])\\r\\nGO\\r\\nCREATE NONCLUSTERED INDEX [IX_Address_AddressLine1_AddressLine2_City_StateProvince_PostalCode_CountryRegion] ON [SalesLT].[Address] ([AddressLine1], [AddressLine2], [City], [StateProvince], [PostalCode], [CountryRegion])\\r\\nGO\\r\\nALTER TABLE [SalesLT].[Address] ADD CONSTRAINT [AK_Address_rowguid] UNIQUE NONCLUSTERED ([rowguid])\\r\\nGO\\r\\nCREATE NONCLUSTERED INDEX [IX_Address_StateProvince] ON [SalesLT].[Address] ([StateProvince])\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Street address information for customers.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Address\u0027, NULL, NULL\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Primary key for Address records.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Address\u0027, \u0027COLUMN\u0027, N\u0027AddressID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027First street address line.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Address\u0027, \u0027COLUMN\u0027, N\u0027AddressLine1\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Second street address line.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Address\u0027, \u0027COLUMN\u0027, N\u0027AddressLine2\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Name of the city.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Address\u0027, \u0027COLUMN\u0027, N\u0027City\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Date and time the record was last updated.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Address\u0027, \u0027COLUMN\u0027, N\u0027ModifiedDate\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Postal code for the street address.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Address\u0027, \u0027COLUMN\u0027, N\u0027PostalCode\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Address\u0027, \u0027COLUMN\u0027, N\u0027rowguid\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Name of state or province.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Address\u0027, \u0027COLUMN\u0027, N\u0027StateProvince\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Unique nonclustered constraint. Used to support replication samples.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Address\u0027, \u0027CONSTRAINT\u0027, N\u0027AK_Address_rowguid\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Default constraint value of GETDATE()\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Address\u0027, \u0027CONSTRAINT\u0027, N\u0027DF_Address_ModifiedDate\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Default constraint value of NEWID()\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Address\u0027, \u0027CONSTRAINT\u0027, N\u0027DF_Address_rowguid\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Primary key (clustered) constraint\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Address\u0027, \u0027CONSTRAINT\u0027, N\u0027PK_Address_AddressID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Nonclustered index.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Address\u0027, \u0027INDEX\u0027, N\u0027IX_Address_AddressLine1_AddressLine2_City_StateProvince_PostalCode_CountryRegion\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Nonclustered index.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Address\u0027, \u0027INDEX\u0027, N\u0027IX_Address_StateProvince\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Clustered index created by a primary key constraint.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Address\u0027, \u0027INDEX\u0027, N\u0027PK_Address_AddressID\u0027\\r\\nGO\\r\\n"
        },
        {
          "objectType": "Table",
          "name": "CustomerAddress",
          "schema": "SalesLT",
          "definitionBefore": "",
          "definitionAfter": "CREATE TABLE [SalesLT].[CustomerAddress]\\r\\n(\\r\\n[CustomerID] [int] NOT NULL,\\r\\n[AddressID] [int] NOT NULL,\\r\\n[AddressType] [dbo].[Name] NOT NULL,\\r\\n[rowguid] [uniqueidentifier] NOT NULL ROWGUIDCOL CONSTRAINT [DF_CustomerAddress_rowguid] DEFAULT (newid()),\\r\\n[ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_CustomerAddress_ModifiedDate] DEFAULT (getdate())\\r\\n)\\r\\nGO\\r\\nALTER TABLE [SalesLT].[CustomerAddress] ADD CONSTRAINT [PK_CustomerAddress_CustomerID_AddressID] PRIMARY KEY CLUSTERED ([CustomerID], [AddressID])\\r\\nGO\\r\\nALTER TABLE [SalesLT].[CustomerAddress] ADD CONSTRAINT [AK_CustomerAddress_rowguid] UNIQUE NONCLUSTERED ([rowguid])\\r\\nGO\\r\\nALTER TABLE [SalesLT].[CustomerAddress] ADD CONSTRAINT [FK_CustomerAddress_Address_AddressID] FOREIGN KEY ([AddressID]) REFERENCES [SalesLT].[Address] ([AddressID])\\r\\nGO\\r\\nALTER TABLE [SalesLT].[CustomerAddress] ADD CONSTRAINT [FK_CustomerAddress_Customer_CustomerID] FOREIGN KEY ([CustomerID]) REFERENCES [SalesLT].[Customer] ([CustomerID])\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Cross-reference table mapping customers to their address(es).\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027CustomerAddress\u0027, NULL, NULL\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Primary key. Foreign key to Address.AddressID.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027CustomerAddress\u0027, \u0027COLUMN\u0027, N\u0027AddressID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027The kind of Address. One of: Archive, Billing, Home, Main Office, Primary, Shipping\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027CustomerAddress\u0027, \u0027COLUMN\u0027, N\u0027AddressType\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Primary key. Foreign key to Customer.CustomerID.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027CustomerAddress\u0027, \u0027COLUMN\u0027, N\u0027CustomerID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Date and time the record was last updated.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027CustomerAddress\u0027, \u0027COLUMN\u0027, N\u0027ModifiedDate\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027CustomerAddress\u0027, \u0027COLUMN\u0027, N\u0027rowguid\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Unique nonclustered constraint. Used to support replication samples.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027CustomerAddress\u0027, \u0027CONSTRAINT\u0027, N\u0027AK_CustomerAddress_rowguid\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Default constraint value of NEWID()\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027CustomerAddress\u0027, \u0027CONSTRAINT\u0027, N\u0027DF_CustomerAddress_rowguid\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Foreign key constraint referencing Address.AddressID.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027CustomerAddress\u0027, \u0027CONSTRAINT\u0027, N\u0027FK_CustomerAddress_Address_AddressID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Foreign key constraint referencing Customer.CustomerID.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027CustomerAddress\u0027, \u0027CONSTRAINT\u0027, N\u0027FK_CustomerAddress_Customer_CustomerID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Primary key (clustered) constraint\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027CustomerAddress\u0027, \u0027CONSTRAINT\u0027, N\u0027PK_CustomerAddress_CustomerID_AddressID\u0027\\r\\nGO\\r\\n"
        },
        {
          "objectType": "Table",
          "name": "Customer",
          "schema": "SalesLT",
          "definitionBefore": "",
          "definitionAfter": "CREATE TABLE [SalesLT].[Customer]\\r\\n(\\r\\n[CustomerID] [int] NOT NULL IDENTITY(1, 1) NOT FOR REPLICATION,\\r\\n[NameStyle] [dbo].[NameStyle] NOT NULL CONSTRAINT [DF_Customer_NameStyle] DEFAULT ((0)),\\r\\n[Title] [nvarchar] (8) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\\r\\n[FirstName] [dbo].[Name] NOT NULL,\\r\\n[MiddleName] [dbo].[Name] NULL,\\r\\n[LastName] [dbo].[Name] NOT NULL,\\r\\n[Suffix] [nvarchar] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\\r\\n[CompanyName] [nvarchar] (128) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\\r\\n[SalesPerson] [nvarchar] (256) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\\r\\n[EmailAddress] [nvarchar] (50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\\r\\n[Phone] [dbo].[Phone] NULL,\\r\\n[PasswordHash] [varchar] (128) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\\r\\n[PasswordSalt] [nchar] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\\r\\n[rowguid] [uniqueidentifier] NOT NULL ROWGUIDCOL CONSTRAINT [DF_Customer_rowguid] DEFAULT (newid()),\\r\\n[ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_Customer_ModifiedDate] DEFAULT (getdate()),\\r\\n[New] [nchar] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\\r\\n[New2] [nchar] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL\\r\\n)\\r\\nGO\\r\\nALTER TABLE [SalesLT].[Customer] ADD CONSTRAINT [PK_Customer_CustomerID] PRIMARY KEY CLUSTERED ([CustomerID])\\r\\nGO\\r\\nCREATE NONCLUSTERED INDEX [IX_Customer_EmailAddress] ON [SalesLT].[Customer] ([EmailAddress])\\r\\nGO\\r\\nALTER TABLE [SalesLT].[Customer] ADD CONSTRAINT [AK_Customer_rowguid] UNIQUE NONCLUSTERED ([rowguid])\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Customer information.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Customer\u0027, NULL, NULL\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027The customer\u0027\u0027s organization.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Customer\u0027, \u0027COLUMN\u0027, N\u0027CompanyName\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Primary key for Customer records.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Customer\u0027, \u0027COLUMN\u0027, N\u0027CustomerID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027E-mail address for the person.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Customer\u0027, \u0027COLUMN\u0027, N\u0027EmailAddress\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027First name of the person.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Customer\u0027, \u0027COLUMN\u0027, N\u0027FirstName\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Last name of the person.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Customer\u0027, \u0027COLUMN\u0027, N\u0027LastName\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Middle name or middle initial of the person.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Customer\u0027, \u0027COLUMN\u0027, N\u0027MiddleName\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Date and time the record was last updated.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Customer\u0027, \u0027COLUMN\u0027, N\u0027ModifiedDate\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u00270 \u003d The data in FirstName and LastName are stored in western style (first name, last name) order.  1 \u003d Eastern style (last name, first name) order.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Customer\u0027, \u0027COLUMN\u0027, N\u0027NameStyle\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Password for the e-mail account.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Customer\u0027, \u0027COLUMN\u0027, N\u0027PasswordHash\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Phone number associated with the person.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Customer\u0027, \u0027COLUMN\u0027, N\u0027Phone\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Customer\u0027, \u0027COLUMN\u0027, N\u0027rowguid\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027The customer\u0027\u0027s sales person, an employee of AdventureWorks Cycles.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Customer\u0027, \u0027COLUMN\u0027, N\u0027SalesPerson\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Surname suffix. For example, Sr. or Jr.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Customer\u0027, \u0027COLUMN\u0027, N\u0027Suffix\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027A courtesy title. For example, Mr. or Ms.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Customer\u0027, \u0027COLUMN\u0027, N\u0027Title\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Unique nonclustered constraint. Used to support replication samples.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Customer\u0027, \u0027CONSTRAINT\u0027, N\u0027AK_Customer_rowguid\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Default constraint value of GETDATE()\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Customer\u0027, \u0027CONSTRAINT\u0027, N\u0027DF_Customer_ModifiedDate\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Default constraint value of 0\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Customer\u0027, \u0027CONSTRAINT\u0027, N\u0027DF_Customer_NameStyle\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Default constraint value of NEWID()\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Customer\u0027, \u0027CONSTRAINT\u0027, N\u0027DF_Customer_rowguid\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Primary key (clustered) constraint\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Customer\u0027, \u0027CONSTRAINT\u0027, N\u0027PK_Customer_CustomerID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Nonclustered index.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Customer\u0027, \u0027INDEX\u0027, N\u0027IX_Customer_EmailAddress\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Clustered index created by a primary key constraint.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Customer\u0027, \u0027INDEX\u0027, N\u0027PK_Customer_CustomerID\u0027\\r\\nGO\\r\\n"
        },
        {
          "objectType": "Table",
          "name": "ProductCategory",
          "schema": "SalesLT",
          "definitionBefore": "",
          "definitionAfter": "CREATE TABLE [SalesLT].[ProductCategory]\\r\\n(\\r\\n[ProductCategoryID] [int] NOT NULL IDENTITY(1, 1),\\r\\n[ParentProductCategoryID] [int] NULL,\\r\\n[Name] [dbo].[Name] NOT NULL,\\r\\n[rowguid] [uniqueidentifier] NOT NULL ROWGUIDCOL CONSTRAINT [DF_ProductCategory_rowguid] DEFAULT (newid()),\\r\\n[ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_ProductCategory_ModifiedDate] DEFAULT (getdate())\\r\\n)\\r\\nGO\\r\\nALTER TABLE [SalesLT].[ProductCategory] ADD CONSTRAINT [PK_ProductCategory_ProductCategoryID] PRIMARY KEY CLUSTERED ([ProductCategoryID])\\r\\nGO\\r\\nALTER TABLE [SalesLT].[ProductCategory] ADD CONSTRAINT [AK_ProductCategory_Name] UNIQUE NONCLUSTERED ([Name])\\r\\nGO\\r\\nALTER TABLE [SalesLT].[ProductCategory] ADD CONSTRAINT [AK_ProductCategory_rowguid] UNIQUE NONCLUSTERED ([rowguid])\\r\\nGO\\r\\nALTER TABLE [SalesLT].[ProductCategory] ADD CONSTRAINT [FK_ProductCategory_ProductCategory_ParentProductCategoryID_ProductCategoryID] FOREIGN KEY ([ParentProductCategoryID]) REFERENCES [SalesLT].[ProductCategory] ([ProductCategoryID])\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027High-level product categorization.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductCategory\u0027, NULL, NULL\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Date and time the record was last updated.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductCategory\u0027, \u0027COLUMN\u0027, N\u0027ModifiedDate\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Category description.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductCategory\u0027, \u0027COLUMN\u0027, N\u0027Name\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Product category identification number of immediate ancestor category. Foreign key to ProductCategory.ProductCategoryID.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductCategory\u0027, \u0027COLUMN\u0027, N\u0027ParentProductCategoryID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Primary key for ProductCategory records.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductCategory\u0027, \u0027COLUMN\u0027, N\u0027ProductCategoryID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductCategory\u0027, \u0027COLUMN\u0027, N\u0027rowguid\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Unique nonclustered constraint.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductCategory\u0027, \u0027CONSTRAINT\u0027, N\u0027AK_ProductCategory_Name\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Unique nonclustered constraint. Used to support replication samples.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductCategory\u0027, \u0027CONSTRAINT\u0027, N\u0027AK_ProductCategory_rowguid\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Default constraint value of GETDATE()\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductCategory\u0027, \u0027CONSTRAINT\u0027, N\u0027DF_ProductCategory_ModifiedDate\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Default constraint value of NEWID()()\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductCategory\u0027, \u0027CONSTRAINT\u0027, N\u0027DF_ProductCategory_rowguid\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Foreign key constraint referencing ProductCategory.ProductCategoryID.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductCategory\u0027, \u0027CONSTRAINT\u0027, N\u0027FK_ProductCategory_ProductCategory_ParentProductCategoryID_ProductCategoryID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Primary key (clustered) constraint\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductCategory\u0027, \u0027CONSTRAINT\u0027, N\u0027PK_ProductCategory_ProductCategoryID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Clustered index created by a primary key constraint.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductCategory\u0027, \u0027INDEX\u0027, N\u0027PK_ProductCategory_ProductCategoryID\u0027\\r\\nGO\\r\\n"
        },
        {
          "objectType": "Table",
          "name": "ProductDescription",
          "schema": "SalesLT",
          "definitionBefore": "",
          "definitionAfter": "CREATE TABLE [SalesLT].[ProductDescription]\\r\\n(\\r\\n[ProductDescriptionID] [int] NOT NULL IDENTITY(1, 1),\\r\\n[Description] [nvarchar] (400) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\\r\\n[rowguid] [uniqueidentifier] NOT NULL ROWGUIDCOL CONSTRAINT [DF_ProductDescription_rowguid] DEFAULT (newid()),\\r\\n[ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_ProductDescription_ModifiedDate] DEFAULT (getdate())\\r\\n)\\r\\nGO\\r\\nALTER TABLE [SalesLT].[ProductDescription] ADD CONSTRAINT [PK_ProductDescription_ProductDescriptionID] PRIMARY KEY CLUSTERED ([ProductDescriptionID])\\r\\nGO\\r\\nALTER TABLE [SalesLT].[ProductDescription] ADD CONSTRAINT [AK_ProductDescription_rowguid] UNIQUE NONCLUSTERED ([rowguid])\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Product descriptions in several languages.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductDescription\u0027, NULL, NULL\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Description of the product.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductDescription\u0027, \u0027COLUMN\u0027, N\u0027Description\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Date and time the record was last updated.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductDescription\u0027, \u0027COLUMN\u0027, N\u0027ModifiedDate\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Primary key for ProductDescription records.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductDescription\u0027, \u0027COLUMN\u0027, N\u0027ProductDescriptionID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductDescription\u0027, \u0027COLUMN\u0027, N\u0027rowguid\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Unique nonclustered constraint. Used to support replication samples.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductDescription\u0027, \u0027CONSTRAINT\u0027, N\u0027AK_ProductDescription_rowguid\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Default constraint value of GETDATE()\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductDescription\u0027, \u0027CONSTRAINT\u0027, N\u0027DF_ProductDescription_ModifiedDate\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Default constraint value of NEWID()\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductDescription\u0027, \u0027CONSTRAINT\u0027, N\u0027DF_ProductDescription_rowguid\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Primary key (clustered) constraint\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductDescription\u0027, \u0027CONSTRAINT\u0027, N\u0027PK_ProductDescription_ProductDescriptionID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Clustered index created by a primary key constraint.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductDescription\u0027, \u0027INDEX\u0027, N\u0027PK_ProductDescription_ProductDescriptionID\u0027\\r\\nGO\\r\\n"
        },
        {
          "objectType": "Table",
          "name": "ProductModelProductDescription",
          "schema": "SalesLT",
          "definitionBefore": "",
          "definitionAfter": "CREATE TABLE [SalesLT].[ProductModelProductDescription]\\r\\n(\\r\\n[ProductModelID] [int] NOT NULL,\\r\\n[ProductDescriptionID] [int] NOT NULL,\\r\\n[Culture] [nchar] (6) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\\r\\n[rowguid] [uniqueidentifier] NOT NULL ROWGUIDCOL CONSTRAINT [DF_ProductModelProductDescription_rowguid] DEFAULT (newid()),\\r\\n[ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_ProductModelProductDescription_ModifiedDate] DEFAULT (getdate())\\r\\n)\\r\\nGO\\r\\nALTER TABLE [SalesLT].[ProductModelProductDescription] ADD CONSTRAINT [PK_ProductModelProductDescription_ProductModelID_ProductDescriptionID_Culture] PRIMARY KEY CLUSTERED ([ProductModelID], [ProductDescriptionID], [Culture])\\r\\nGO\\r\\nALTER TABLE [SalesLT].[ProductModelProductDescription] ADD CONSTRAINT [AK_ProductModelProductDescription_rowguid] UNIQUE NONCLUSTERED ([rowguid])\\r\\nGO\\r\\nALTER TABLE [SalesLT].[ProductModelProductDescription] ADD CONSTRAINT [FK_ProductModelProductDescription_ProductDescription_ProductDescriptionID] FOREIGN KEY ([ProductDescriptionID]) REFERENCES [SalesLT].[ProductDescription] ([ProductDescriptionID])\\r\\nGO\\r\\nALTER TABLE [SalesLT].[ProductModelProductDescription] ADD CONSTRAINT [FK_ProductModelProductDescription_ProductModel_ProductModelID] FOREIGN KEY ([ProductModelID]) REFERENCES [SalesLT].[ProductModel] ([ProductModelID])\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Cross-reference table mapping product descriptions and the language the description is written in.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductModelProductDescription\u0027, NULL, NULL\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027The culture for which the description is written\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductModelProductDescription\u0027, \u0027COLUMN\u0027, N\u0027Culture\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Date and time the record was last updated.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductModelProductDescription\u0027, \u0027COLUMN\u0027, N\u0027ModifiedDate\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Primary key. Foreign key to ProductDescription.ProductDescriptionID.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductModelProductDescription\u0027, \u0027COLUMN\u0027, N\u0027ProductDescriptionID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Primary key. Foreign key to ProductModel.ProductModelID.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductModelProductDescription\u0027, \u0027COLUMN\u0027, N\u0027ProductModelID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Unique nonclustered constraint. Used to support replication samples.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductModelProductDescription\u0027, \u0027CONSTRAINT\u0027, N\u0027AK_ProductModelProductDescription_rowguid\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Default constraint value of GETDATE()\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductModelProductDescription\u0027, \u0027CONSTRAINT\u0027, N\u0027DF_ProductModelProductDescription_ModifiedDate\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Foreign key constraint referencing ProductDescription.ProductDescriptionID.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductModelProductDescription\u0027, \u0027CONSTRAINT\u0027, N\u0027FK_ProductModelProductDescription_ProductDescription_ProductDescriptionID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Foreign key constraint referencing ProductModel.ProductModelID.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductModelProductDescription\u0027, \u0027CONSTRAINT\u0027, N\u0027FK_ProductModelProductDescription_ProductModel_ProductModelID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Primary key (clustered) constraint\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductModelProductDescription\u0027, \u0027CONSTRAINT\u0027, N\u0027PK_ProductModelProductDescription_ProductModelID_ProductDescriptionID_Culture\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Clustered index created by a primary key constraint.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductModelProductDescription\u0027, \u0027INDEX\u0027, N\u0027PK_ProductModelProductDescription_ProductModelID_ProductDescriptionID_Culture\u0027\\r\\nGO\\r\\n"
        },
        {
          "objectType": "Table",
          "name": "ProductModel",
          "schema": "SalesLT",
          "definitionBefore": "",
          "definitionAfter": "CREATE TABLE [SalesLT].[ProductModel]\\r\\n(\\r\\n[ProductModelID] [int] NOT NULL IDENTITY(1, 1),\\r\\n[Name] [dbo].[Name] NOT NULL,\\r\\n[CatalogDescription] [xml] (CONTENT [SalesLT].[ProductDescriptionSchemaCollection]) NULL,\\r\\n[rowguid] [uniqueidentifier] NOT NULL ROWGUIDCOL CONSTRAINT [DF_ProductModel_rowguid] DEFAULT (newid()),\\r\\n[ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_ProductModel_ModifiedDate] DEFAULT (getdate())\\r\\n)\\r\\nGO\\r\\nALTER TABLE [SalesLT].[ProductModel] ADD CONSTRAINT [PK_ProductModel_ProductModelID] PRIMARY KEY CLUSTERED ([ProductModelID])\\r\\nGO\\r\\nALTER TABLE [SalesLT].[ProductModel] ADD CONSTRAINT [AK_ProductModel_Name] UNIQUE NONCLUSTERED ([Name])\\r\\nGO\\r\\nALTER TABLE [SalesLT].[ProductModel] ADD CONSTRAINT [AK_ProductModel_rowguid] UNIQUE NONCLUSTERED ([rowguid])\\r\\nGO\\r\\nCREATE PRIMARY XML INDEX [PXML_ProductModel_CatalogDescription]\\r\\nON [SalesLT].[ProductModel] ([CatalogDescription])\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Unique nonclustered constraint.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductModel\u0027, \u0027CONSTRAINT\u0027, N\u0027AK_ProductModel_Name\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Unique nonclustered constraint. Used to support replication samples.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductModel\u0027, \u0027CONSTRAINT\u0027, N\u0027AK_ProductModel_rowguid\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Default constraint value of GETDATE()\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductModel\u0027, \u0027CONSTRAINT\u0027, N\u0027DF_ProductModel_ModifiedDate\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Default constraint value of NEWID()\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductModel\u0027, \u0027CONSTRAINT\u0027, N\u0027DF_ProductModel_rowguid\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Primary key (clustered) constraint\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductModel\u0027, \u0027CONSTRAINT\u0027, N\u0027PK_ProductModel_ProductModelID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Clustered index created by a primary key constraint.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027ProductModel\u0027, \u0027INDEX\u0027, N\u0027PK_ProductModel_ProductModelID\u0027\\r\\nGO\\r\\n"
        },
        {
          "objectType": "Table",
          "name": "Product",
          "schema": "SalesLT",
          "definitionBefore": "",
          "definitionAfter": "CREATE TABLE [SalesLT].[Product]\\r\\n(\\r\\n[ProductID] [int] NOT NULL IDENTITY(1, 1),\\r\\n[Name] [dbo].[Name] NOT NULL,\\r\\n[ProductNumber] [nvarchar] (25) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\\r\\n[Color] [nvarchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\\r\\n[StandardCost] [money] NOT NULL,\\r\\n[ListPrice] [money] NOT NULL,\\r\\n[Size] [nvarchar] (5) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\\r\\n[Weight] [decimal] (8, 2) NULL,\\r\\n[ProductCategoryID] [int] NULL,\\r\\n[ProductModelID] [int] NULL,\\r\\n[SellStartDate] [datetime] NOT NULL,\\r\\n[SellEndDate] [datetime] NULL,\\r\\n[DiscontinuedDate] [datetime] NULL,\\r\\n[ThumbNailPhoto] [varbinary] (max) NULL,\\r\\n[ThumbnailPhotoFileName] [nvarchar] (50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\\r\\n[rowguid] [uniqueidentifier] NOT NULL ROWGUIDCOL CONSTRAINT [DF_Product_rowguid] DEFAULT (newid()),\\r\\n[ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_Product_ModifiedDate] DEFAULT (getdate())\\r\\n)\\r\\nGO\\r\\nALTER TABLE [SalesLT].[Product] WITH NOCHECK ADD CONSTRAINT [CK_Product_ListPrice] CHECK (([ListPrice]\u003e\u003d(0.00)))\\r\\nGO\\r\\nALTER TABLE [SalesLT].[Product] WITH NOCHECK ADD CONSTRAINT [CK_Product_SellEndDate] CHECK (([SellEndDate]\u003e\u003d[SellStartDate] OR [SellEndDate] IS NULL))\\r\\nGO\\r\\nALTER TABLE [SalesLT].[Product] WITH NOCHECK ADD CONSTRAINT [CK_Product_StandardCost] CHECK (([StandardCost]\u003e\u003d(0.00)))\\r\\nGO\\r\\nALTER TABLE [SalesLT].[Product] WITH NOCHECK ADD CONSTRAINT [CK_Product_Weight] CHECK (([Weight]\u003e(0.00)))\\r\\nGO\\r\\nALTER TABLE [SalesLT].[Product] ADD CONSTRAINT [PK_Product_ProductID] PRIMARY KEY CLUSTERED ([ProductID])\\r\\nGO\\r\\nALTER TABLE [SalesLT].[Product] ADD CONSTRAINT [AK_Product_Name] UNIQUE NONCLUSTERED ([Name])\\r\\nGO\\r\\nALTER TABLE [SalesLT].[Product] ADD CONSTRAINT [AK_Product_ProductNumber] UNIQUE NONCLUSTERED ([ProductNumber])\\r\\nGO\\r\\nALTER TABLE [SalesLT].[Product] ADD CONSTRAINT [AK_Product_rowguid] UNIQUE NONCLUSTERED ([rowguid])\\r\\nGO\\r\\nALTER TABLE [SalesLT].[Product] ADD CONSTRAINT [FK_Product_ProductCategory_ProductCategoryID] FOREIGN KEY ([ProductCategoryID]) REFERENCES [SalesLT].[ProductCategory] ([ProductCategoryID])\\r\\nGO\\r\\nALTER TABLE [SalesLT].[Product] ADD CONSTRAINT [FK_Product_ProductModel_ProductModelID] FOREIGN KEY ([ProductModelID]) REFERENCES [SalesLT].[ProductModel] ([ProductModelID])\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Products sold or used in the manfacturing of sold products.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Product\u0027, NULL, NULL\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Product color.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Product\u0027, \u0027COLUMN\u0027, N\u0027Color\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Date the product was discontinued.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Product\u0027, \u0027COLUMN\u0027, N\u0027DiscontinuedDate\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Selling price.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Product\u0027, \u0027COLUMN\u0027, N\u0027ListPrice\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Date and time the record was last updated.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Product\u0027, \u0027COLUMN\u0027, N\u0027ModifiedDate\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Name of the product.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Product\u0027, \u0027COLUMN\u0027, N\u0027Name\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Product is a member of this product category. Foreign key to ProductCategory.ProductCategoryID. \u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Product\u0027, \u0027COLUMN\u0027, N\u0027ProductCategoryID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Primary key for Product records.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Product\u0027, \u0027COLUMN\u0027, N\u0027ProductID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Product is a member of this product model. Foreign key to ProductModel.ProductModelID.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Product\u0027, \u0027COLUMN\u0027, N\u0027ProductModelID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Unique product identification number.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Product\u0027, \u0027COLUMN\u0027, N\u0027ProductNumber\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Product\u0027, \u0027COLUMN\u0027, N\u0027rowguid\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Date the product was no longer available for sale.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Product\u0027, \u0027COLUMN\u0027, N\u0027SellEndDate\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Date the product was available for sale.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Product\u0027, \u0027COLUMN\u0027, N\u0027SellStartDate\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Product size.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Product\u0027, \u0027COLUMN\u0027, N\u0027Size\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Standard cost of the product.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Product\u0027, \u0027COLUMN\u0027, N\u0027StandardCost\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Small image of the product.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Product\u0027, \u0027COLUMN\u0027, N\u0027ThumbNailPhoto\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Small image file name.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Product\u0027, \u0027COLUMN\u0027, N\u0027ThumbnailPhotoFileName\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Product weight.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Product\u0027, \u0027COLUMN\u0027, N\u0027Weight\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Unique nonclustered constraint.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Product\u0027, \u0027CONSTRAINT\u0027, N\u0027AK_Product_Name\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Unique nonclustered constraint.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Product\u0027, \u0027CONSTRAINT\u0027, N\u0027AK_Product_ProductNumber\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Unique nonclustered constraint. Used to support replication samples.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Product\u0027, \u0027CONSTRAINT\u0027, N\u0027AK_Product_rowguid\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Check constraint [ListPrice] \u003e\u003d (0.00)\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Product\u0027, \u0027CONSTRAINT\u0027, N\u0027CK_Product_ListPrice\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Check constraint [SellEndDate] \u003e\u003d [SellStartDate] OR [SellEndDate] IS NULL\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Product\u0027, \u0027CONSTRAINT\u0027, N\u0027CK_Product_SellEndDate\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Check constraint [Weight] \u003e (0.00)\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Product\u0027, \u0027CONSTRAINT\u0027, N\u0027CK_Product_Weight\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Default constraint value of GETDATE()\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Product\u0027, \u0027CONSTRAINT\u0027, N\u0027DF_Product_ModifiedDate\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Default constraint value of NEWID()\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Product\u0027, \u0027CONSTRAINT\u0027, N\u0027DF_Product_rowguid\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Foreign key constraint referencing ProductCategory.ProductCategoryID.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Product\u0027, \u0027CONSTRAINT\u0027, N\u0027FK_Product_ProductCategory_ProductCategoryID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Foreign key constraint referencing ProductModel.ProductModelID.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Product\u0027, \u0027CONSTRAINT\u0027, N\u0027FK_Product_ProductModel_ProductModelID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Primary key (clustered) constraint\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Product\u0027, \u0027CONSTRAINT\u0027, N\u0027PK_Product_ProductID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Clustered index created by a primary key constraint.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027Product\u0027, \u0027INDEX\u0027, N\u0027PK_Product_ProductID\u0027\\r\\nGO\\r\\n"
        },
        {
          "objectType": "Table",
          "name": "SalesOrderDetail",
          "schema": "SalesLT",
          "definitionBefore": "",
          "definitionAfter": "CREATE TABLE [SalesLT].[SalesOrderDetail]\\r\\n(\\r\\n[SalesOrderID] [int] NOT NULL,\\r\\n[SalesOrderDetailID] [int] NOT NULL IDENTITY(1, 1),\\r\\n[OrderQty] [smallint] NOT NULL,\\r\\n[ProductID] [int] NOT NULL,\\r\\n[UnitPrice] [money] NOT NULL,\\r\\n[UnitPriceDiscount] [money] NOT NULL CONSTRAINT [DF_SalesOrderDetail_UnitPriceDiscount] DEFAULT ((0.0)),\\r\\n[LineTotal] AS (isnull(([UnitPrice]*((1.0)-[UnitPriceDiscount]))*[OrderQty],(0.0))),\\r\\n[rowguid] [uniqueidentifier] NOT NULL ROWGUIDCOL CONSTRAINT [DF_SalesOrderDetail_rowguid] DEFAULT (newid()),\\r\\n[ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_SalesOrderDetail_ModifiedDate] DEFAULT (getdate())\\r\\n)\\r\\nGO\\r\\n\\r\\n\\r\\nCREATE TRIGGER [SalesLT].[iduSalesOrderDetail] ON [SalesLT].[SalesOrderDetail] \\r\\nAFTER INSERT, DELETE, UPDATE AS \\r\\nBEGIN\\r\\n    DECLARE @Count int;\\r\\n\\r\\n    SET @Count \u003d @@ROWCOUNT;\\r\\n    IF @Count \u003d 0 \\r\\n        RETURN;\\r\\n\\r\\n    SET NOCOUNT ON;\\r\\n\\r\\n    BEGIN TRY\\r\\n        -- If inserting or updating these columns\\r\\n        IF UPDATE([ProductID]) OR UPDATE([OrderQty]) OR UPDATE([UnitPrice]) OR UPDATE([UnitPriceDiscount]) \\r\\n\\r\\n        -- Update SubTotal in SalesOrderHeader record. Note that this causes the \\r\\n        -- SalesOrderHeader trigger to fire which will update the RevisionNumber.\\r\\n        UPDATE [SalesLT].[SalesOrderHeader]\\r\\n        SET [SalesLT].[SalesOrderHeader].[SubTotal] \u003d \\r\\n            (SELECT SUM([SalesLT].[SalesOrderDetail].[LineTotal])\\r\\n                FROM [SalesLT].[SalesOrderDetail]\\r\\n                WHERE [SalesLT].[SalesOrderHeader].[SalesOrderID] \u003d [SalesLT].[SalesOrderDetail].[SalesOrderID])\\r\\n        WHERE [SalesLT].[SalesOrderHeader].[SalesOrderID] IN (SELECT inserted.[SalesOrderID] FROM inserted);\\r\\n\\r\\n    END TRY\\r\\n    BEGIN CATCH\\r\\n        EXECUTE [dbo].[uspPrintError];\\r\\n\\r\\n        -- Rollback any active or uncommittable transactions before\\r\\n        -- inserting information in the ErrorLog\\r\\n        IF @@TRANCOUNT \u003e 0\\r\\n        BEGIN\\r\\n            ROLLBACK TRANSACTION;\\r\\n        END\\r\\n\\r\\n        EXECUTE [dbo].[uspLogError];\\r\\n    END CATCH;\\r\\nEND;\\r\\nGO\\r\\nALTER TABLE [SalesLT].[SalesOrderDetail] WITH NOCHECK ADD CONSTRAINT [CK_SalesOrderDetail_OrderQty] CHECK (([OrderQty]\u003e(0)))\\r\\nGO\\r\\nALTER TABLE [SalesLT].[SalesOrderDetail] WITH NOCHECK ADD CONSTRAINT [CK_SalesOrderDetail_UnitPrice] CHECK (([UnitPrice]\u003e\u003d(0.00)))\\r\\nGO\\r\\nALTER TABLE [SalesLT].[SalesOrderDetail] WITH NOCHECK ADD CONSTRAINT [CK_SalesOrderDetail_UnitPriceDiscount] CHECK (([UnitPriceDiscount]\u003e\u003d(0.00)))\\r\\nGO\\r\\nALTER TABLE [SalesLT].[SalesOrderDetail] ADD CONSTRAINT [PK_SalesOrderDetail_SalesOrderID_SalesOrderDetailID] PRIMARY KEY CLUSTERED ([SalesOrderID], [SalesOrderDetailID])\\r\\nGO\\r\\nCREATE NONCLUSTERED INDEX [IX_SalesOrderDetail_ProductID] ON [SalesLT].[SalesOrderDetail] ([ProductID])\\r\\nGO\\r\\nALTER TABLE [SalesLT].[SalesOrderDetail] ADD CONSTRAINT [AK_SalesOrderDetail_rowguid] UNIQUE NONCLUSTERED ([rowguid])\\r\\nGO\\r\\nALTER TABLE [SalesLT].[SalesOrderDetail] ADD CONSTRAINT [FK_SalesOrderDetail_Product_ProductID] FOREIGN KEY ([ProductID]) REFERENCES [SalesLT].[Product] ([ProductID])\\r\\nGO\\r\\nALTER TABLE [SalesLT].[SalesOrderDetail] ADD CONSTRAINT [FK_SalesOrderDetail_SalesOrderHeader_SalesOrderID] FOREIGN KEY ([SalesOrderID]) REFERENCES [SalesLT].[SalesOrderHeader] ([SalesOrderID]) ON DELETE CASCADE\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Individual products associated with a specific sales order. See SalesOrderHeader.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderDetail\u0027, NULL, NULL\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Per product subtotal. Computed as UnitPrice * (1 - UnitPriceDiscount) * OrderQty.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderDetail\u0027, \u0027COLUMN\u0027, N\u0027LineTotal\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Date and time the record was last updated.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderDetail\u0027, \u0027COLUMN\u0027, N\u0027ModifiedDate\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Quantity ordered per product.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderDetail\u0027, \u0027COLUMN\u0027, N\u0027OrderQty\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Product sold to customer. Foreign key to Product.ProductID.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderDetail\u0027, \u0027COLUMN\u0027, N\u0027ProductID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderDetail\u0027, \u0027COLUMN\u0027, N\u0027rowguid\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Primary key. One incremental unique number per product sold.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderDetail\u0027, \u0027COLUMN\u0027, N\u0027SalesOrderDetailID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Primary key. Foreign key to SalesOrderHeader.SalesOrderID.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderDetail\u0027, \u0027COLUMN\u0027, N\u0027SalesOrderID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Selling price of a single product.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderDetail\u0027, \u0027COLUMN\u0027, N\u0027UnitPrice\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Discount amount.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderDetail\u0027, \u0027COLUMN\u0027, N\u0027UnitPriceDiscount\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Unique nonclustered constraint. Used to support replication samples.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderDetail\u0027, \u0027CONSTRAINT\u0027, N\u0027AK_SalesOrderDetail_rowguid\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Check constraint [OrderQty] \u003e (0)\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderDetail\u0027, \u0027CONSTRAINT\u0027, N\u0027CK_SalesOrderDetail_OrderQty\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Check constraint [UnitPrice] \u003e\u003d (0.00)\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderDetail\u0027, \u0027CONSTRAINT\u0027, N\u0027CK_SalesOrderDetail_UnitPrice\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Check constraint [UnitPriceDiscount] \u003e\u003d (0.00)\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderDetail\u0027, \u0027CONSTRAINT\u0027, N\u0027CK_SalesOrderDetail_UnitPriceDiscount\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Default constraint value of GETDATE()\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderDetail\u0027, \u0027CONSTRAINT\u0027, N\u0027DF_SalesOrderDetail_ModifiedDate\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Default constraint value of NEWID()\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderDetail\u0027, \u0027CONSTRAINT\u0027, N\u0027DF_SalesOrderDetail_rowguid\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Default constraint value of 0.0\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderDetail\u0027, \u0027CONSTRAINT\u0027, N\u0027DF_SalesOrderDetail_UnitPriceDiscount\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Foreign key constraint referencing SalesOrderHeader.SalesOrderID.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderDetail\u0027, \u0027CONSTRAINT\u0027, N\u0027FK_SalesOrderDetail_SalesOrderHeader_SalesOrderID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Primary key (clustered) constraint\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderDetail\u0027, \u0027CONSTRAINT\u0027, N\u0027PK_SalesOrderDetail_SalesOrderID_SalesOrderDetailID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Nonclustered index.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderDetail\u0027, \u0027INDEX\u0027, N\u0027IX_SalesOrderDetail_ProductID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Clustered index created by a primary key constraint.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderDetail\u0027, \u0027INDEX\u0027, N\u0027PK_SalesOrderDetail_SalesOrderID_SalesOrderDetailID\u0027\\r\\nGO\\r\\n"
        },
        {
          "objectType": "Table",
          "name": "SalesOrderHeader",
          "schema": "SalesLT",
          "definitionBefore": "",
          "definitionAfter": "CREATE TABLE [SalesLT].[SalesOrderHeader]\\r\\n(\\r\\n[SalesOrderID] [int] NOT NULL IDENTITY(1, 1) NOT FOR REPLICATION,\\r\\n[RevisionNumber] [tinyint] NOT NULL CONSTRAINT [DF_SalesOrderHeader_RevisionNumber] DEFAULT ((0)),\\r\\n[OrderDate] [datetime] NOT NULL CONSTRAINT [DF_SalesOrderHeader_OrderDate] DEFAULT (getdate()),\\r\\n[DueDate] [datetime] NOT NULL,\\r\\n[ShipDate] [datetime] NULL,\\r\\n[Status] [tinyint] NOT NULL CONSTRAINT [DF_SalesOrderHeader_Status] DEFAULT ((1)),\\r\\n[OnlineOrderFlag] [dbo].[Flag] NOT NULL CONSTRAINT [DF_SalesOrderHeader_OnlineOrderFlag] DEFAULT ((1)),\\r\\n[SalesOrderNumber] AS (isnull(N\u0027SO\u0027+CONVERT([nvarchar](23),[SalesOrderID],(0)),N\u0027*** ERROR ***\u0027)),\\r\\n[PurchaseOrderNumber] [dbo].[OrderNumber] NULL,\\r\\n[AccountNumber] [dbo].[AccountNumber] NULL,\\r\\n[CustomerID] [int] NOT NULL,\\r\\n[ShipToAddressID] [int] NULL,\\r\\n[BillToAddressID] [int] NULL,\\r\\n[ShipMethod] [nvarchar] (50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\\r\\n[CreditCardApprovalCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\\r\\n[SubTotal] [money] NOT NULL CONSTRAINT [DF_SalesOrderHeader_SubTotal] DEFAULT ((0.00)),\\r\\n[TaxAmt] [money] NOT NULL CONSTRAINT [DF_SalesOrderHeader_TaxAmt] DEFAULT ((0.00)),\\r\\n[Freight] [money] NOT NULL CONSTRAINT [DF_SalesOrderHeader_Freight] DEFAULT ((0.00)),\\r\\n[TotalDue] AS (isnull(([SubTotal]+[TaxAmt])+[Freight],(0))),\\r\\n[Comment] [nvarchar] (max) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\\r\\n[rowguid] [uniqueidentifier] NOT NULL ROWGUIDCOL CONSTRAINT [DF_SalesOrderHeader_rowguid] DEFAULT (newid()),\\r\\n[ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_SalesOrderHeader_ModifiedDate] DEFAULT (getdate())\\r\\n)\\r\\nGO\\r\\n\\r\\nCREATE TRIGGER [SalesLT].[uSalesOrderHeader] ON [SalesLT].[SalesOrderHeader] \\r\\nAFTER UPDATE AS \\r\\nBEGIN\\r\\n    DECLARE @Count int;\\r\\n\\r\\n    SET @Count \u003d @@ROWCOUNT;\\r\\n    IF @Count \u003d 0 \\r\\n        RETURN;\\r\\n\\r\\n    SET NOCOUNT ON;\\r\\n\\r\\n    BEGIN TRY\\r\\n        -- Update RevisionNumber for modification of any field EXCEPT the Status.\\r\\n        IF NOT (UPDATE([Status]) OR UPDATE([RevisionNumber]))\\r\\n        BEGIN\\r\\n            UPDATE [SalesLT].[SalesOrderHeader]\\r\\n            SET [SalesLT].[SalesOrderHeader].[RevisionNumber] \u003d \\r\\n                [SalesLT].[SalesOrderHeader].[RevisionNumber] + 1\\r\\n            WHERE [SalesLT].[SalesOrderHeader].[SalesOrderID] IN \\r\\n                (SELECT inserted.[SalesOrderID] FROM inserted);\\r\\n        END;\\r\\n    END TRY\\r\\n    BEGIN CATCH\\r\\n        EXECUTE [dbo].[uspPrintError];\\r\\n\\r\\n        -- Rollback any active or uncommittable transactions before\\r\\n        -- inserting information in the ErrorLog\\r\\n        IF @@TRANCOUNT \u003e 0\\r\\n        BEGIN\\r\\n            ROLLBACK TRANSACTION;\\r\\n        END\\r\\n\\r\\n        EXECUTE [dbo].[uspLogError];\\r\\n    END CATCH;\\r\\nEND;\\r\\nGO\\r\\nALTER TABLE [SalesLT].[SalesOrderHeader] WITH NOCHECK ADD CONSTRAINT [CK_SalesOrderHeader_DueDate] CHECK (([DueDate]\u003e\u003d[OrderDate]))\\r\\nGO\\r\\nALTER TABLE [SalesLT].[SalesOrderHeader] WITH NOCHECK ADD CONSTRAINT [CK_SalesOrderHeader_Freight] CHECK (([Freight]\u003e\u003d(0.00)))\\r\\nGO\\r\\nALTER TABLE [SalesLT].[SalesOrderHeader] WITH NOCHECK ADD CONSTRAINT [CK_SalesOrderHeader_ShipDate] CHECK (([ShipDate]\u003e\u003d[OrderDate] OR [ShipDate] IS NULL))\\r\\nGO\\r\\nALTER TABLE [SalesLT].[SalesOrderHeader] WITH NOCHECK ADD CONSTRAINT [CK_SalesOrderHeader_Status] CHECK (([Status]\u003e\u003d(0) AND [Status]\u003c\u003d(8)))\\r\\nGO\\r\\nALTER TABLE [SalesLT].[SalesOrderHeader] WITH NOCHECK ADD CONSTRAINT [CK_SalesOrderHeader_SubTotal] CHECK (([SubTotal]\u003e\u003d(0.00)))\\r\\nGO\\r\\nALTER TABLE [SalesLT].[SalesOrderHeader] WITH NOCHECK ADD CONSTRAINT [CK_SalesOrderHeader_TaxAmt] CHECK (([TaxAmt]\u003e\u003d(0.00)))\\r\\nGO\\r\\nALTER TABLE [SalesLT].[SalesOrderHeader] ADD CONSTRAINT [PK_SalesOrderHeader_SalesOrderID] PRIMARY KEY CLUSTERED ([SalesOrderID])\\r\\nGO\\r\\nCREATE NONCLUSTERED INDEX [IX_SalesOrderHeader_CustomerID] ON [SalesLT].[SalesOrderHeader] ([CustomerID])\\r\\nGO\\r\\nALTER TABLE [SalesLT].[SalesOrderHeader] ADD CONSTRAINT [AK_SalesOrderHeader_rowguid] UNIQUE NONCLUSTERED ([rowguid])\\r\\nGO\\r\\nALTER TABLE [SalesLT].[SalesOrderHeader] ADD CONSTRAINT [AK_SalesOrderHeader_SalesOrderNumber] UNIQUE NONCLUSTERED ([SalesOrderNumber])\\r\\nGO\\r\\nALTER TABLE [SalesLT].[SalesOrderHeader] ADD CONSTRAINT [FK_SalesOrderHeader_Address_BillTo_AddressID] FOREIGN KEY ([BillToAddressID]) REFERENCES [SalesLT].[Address] ([AddressID])\\r\\nGO\\r\\nALTER TABLE [SalesLT].[SalesOrderHeader] ADD CONSTRAINT [FK_SalesOrderHeader_Address_ShipTo_AddressID] FOREIGN KEY ([ShipToAddressID]) REFERENCES [SalesLT].[Address] ([AddressID])\\r\\nGO\\r\\nALTER TABLE [SalesLT].[SalesOrderHeader] ADD CONSTRAINT [FK_SalesOrderHeader_Customer_CustomerID] FOREIGN KEY ([CustomerID]) REFERENCES [SalesLT].[Customer] ([CustomerID])\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027General sales order information.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, NULL, NULL\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Financial accounting number reference.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027COLUMN\u0027, N\u0027AccountNumber\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027The ID of the location to send invoices.  Foreign key to the Address table.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027COLUMN\u0027, N\u0027BillToAddressID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Sales representative comments.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027COLUMN\u0027, N\u0027Comment\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Approval code provided by the credit card company.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027COLUMN\u0027, N\u0027CreditCardApprovalCode\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Customer identification number. Foreign key to Customer.CustomerID.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027COLUMN\u0027, N\u0027CustomerID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Date the order is due to the customer.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027COLUMN\u0027, N\u0027DueDate\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Shipping cost.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027COLUMN\u0027, N\u0027Freight\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Date and time the record was last updated.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027COLUMN\u0027, N\u0027ModifiedDate\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u00270 \u003d Order placed by sales person. 1 \u003d Order placed online by customer.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027COLUMN\u0027, N\u0027OnlineOrderFlag\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Dates the sales order was created.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027COLUMN\u0027, N\u0027OrderDate\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Customer purchase order number reference. \u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027COLUMN\u0027, N\u0027PurchaseOrderNumber\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Incremental number to track changes to the sales order over time.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027COLUMN\u0027, N\u0027RevisionNumber\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027COLUMN\u0027, N\u0027rowguid\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Primary key.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027COLUMN\u0027, N\u0027SalesOrderID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Unique sales order identification number.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027COLUMN\u0027, N\u0027SalesOrderNumber\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Date the order was shipped to the customer.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027COLUMN\u0027, N\u0027ShipDate\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Shipping method. Foreign key to ShipMethod.ShipMethodID.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027COLUMN\u0027, N\u0027ShipMethod\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027The ID of the location to send goods.  Foreign key to the Address table.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027COLUMN\u0027, N\u0027ShipToAddressID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Order current status. 1 \u003d In process; 2 \u003d Approved; 3 \u003d Backordered; 4 \u003d Rejected; 5 \u003d Shipped; 6 \u003d Cancelled\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027COLUMN\u0027, N\u0027Status\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Sales subtotal. Computed as SUM(SalesOrderDetail.LineTotal)for the appropriate SalesOrderID.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027COLUMN\u0027, N\u0027SubTotal\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Tax amount.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027COLUMN\u0027, N\u0027TaxAmt\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Total due from customer. Computed as Subtotal + TaxAmt + Freight.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027COLUMN\u0027, N\u0027TotalDue\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Unique nonclustered constraint. Used to support replication samples.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027CONSTRAINT\u0027, N\u0027AK_SalesOrderHeader_rowguid\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Unique nonclustered constraint.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027CONSTRAINT\u0027, N\u0027AK_SalesOrderHeader_SalesOrderNumber\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Check constraint [DueDate] \u003e\u003d [OrderDate]\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027CONSTRAINT\u0027, N\u0027CK_SalesOrderHeader_DueDate\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Check constraint [Freight] \u003e\u003d (0.00)\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027CONSTRAINT\u0027, N\u0027CK_SalesOrderHeader_Freight\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Check constraint [ShipDate] \u003e\u003d [OrderDate] OR [ShipDate] IS NULL\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027CONSTRAINT\u0027, N\u0027CK_SalesOrderHeader_ShipDate\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Check constraint [Status] BETWEEN (0) AND (8)\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027CONSTRAINT\u0027, N\u0027CK_SalesOrderHeader_Status\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Check constraint [SubTotal] \u003e\u003d (0.00)\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027CONSTRAINT\u0027, N\u0027CK_SalesOrderHeader_SubTotal\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Check constraint [TaxAmt] \u003e\u003d (0.00)\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027CONSTRAINT\u0027, N\u0027CK_SalesOrderHeader_TaxAmt\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Default constraint value of 0.0\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027CONSTRAINT\u0027, N\u0027DF_SalesOrderHeader_Freight\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Default constraint value of GETDATE()\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027CONSTRAINT\u0027, N\u0027DF_SalesOrderHeader_ModifiedDate\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Default constraint value of 1 (TRUE)\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027CONSTRAINT\u0027, N\u0027DF_SalesOrderHeader_OnlineOrderFlag\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Default constraint value of GETDATE()\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027CONSTRAINT\u0027, N\u0027DF_SalesOrderHeader_OrderDate\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Default constraint value of 0\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027CONSTRAINT\u0027, N\u0027DF_SalesOrderHeader_RevisionNumber\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Default constraint value of NEWID()\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027CONSTRAINT\u0027, N\u0027DF_SalesOrderHeader_rowguid\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Default constraint value of 1\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027CONSTRAINT\u0027, N\u0027DF_SalesOrderHeader_Status\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Default constraint value of 0.0\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027CONSTRAINT\u0027, N\u0027DF_SalesOrderHeader_SubTotal\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Default constraint value of 0.0\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027CONSTRAINT\u0027, N\u0027DF_SalesOrderHeader_TaxAmt\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Foreign key constraint referencing Address.AddressID for BillTo.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027CONSTRAINT\u0027, N\u0027FK_SalesOrderHeader_Address_BillTo_AddressID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Foreign key constraint referencing Address.AddressID for ShipTo.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027CONSTRAINT\u0027, N\u0027FK_SalesOrderHeader_Address_ShipTo_AddressID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Foreign key constraint referencing Customer.CustomerID.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027CONSTRAINT\u0027, N\u0027FK_SalesOrderHeader_Customer_CustomerID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Primary key (clustered) constraint\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027CONSTRAINT\u0027, N\u0027PK_SalesOrderHeader_SalesOrderID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Nonclustered index.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027INDEX\u0027, N\u0027IX_SalesOrderHeader_CustomerID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Clustered index created by a primary key constraint.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027INDEX\u0027, N\u0027PK_SalesOrderHeader_SalesOrderID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027AFTER UPDATE trigger that updates the RevisionNumber and ModifiedDate columns in the SalesOrderHeader table.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027TABLE\u0027, N\u0027SalesOrderHeader\u0027, \u0027TRIGGER\u0027, N\u0027uSalesOrderHeader\u0027\\r\\nGO\\r\\n"
        },
        {
          "objectType": "Table",
          "name": "BuildVersion",
          "schema": "dbo",
          "definitionBefore": "",
          "definitionAfter": "CREATE TABLE [dbo].[BuildVersion]\\r\\n(\\r\\n[SystemInformationID] [tinyint] NOT NULL IDENTITY(1, 1),\\r\\n[Database Version] [nvarchar] (25) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\\r\\n[VersionDate] [datetime] NOT NULL,\\r\\n[ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_BuildVersion_ModifiedDate] DEFAULT (getdate())\\r\\n)\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Current version number of the AdventureWorksLT 2012 sample database. \u0027, \u0027SCHEMA\u0027, N\u0027dbo\u0027, \u0027TABLE\u0027, N\u0027BuildVersion\u0027, NULL, NULL\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Version number of the database in 9.yy.mm.dd.00 format.\u0027, \u0027SCHEMA\u0027, N\u0027dbo\u0027, \u0027TABLE\u0027, N\u0027BuildVersion\u0027, \u0027COLUMN\u0027, N\u0027Database Version\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Date and time the record was last updated.\u0027, \u0027SCHEMA\u0027, N\u0027dbo\u0027, \u0027TABLE\u0027, N\u0027BuildVersion\u0027, \u0027COLUMN\u0027, N\u0027ModifiedDate\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Primary key for BuildVersion records.\u0027, \u0027SCHEMA\u0027, N\u0027dbo\u0027, \u0027TABLE\u0027, N\u0027BuildVersion\u0027, \u0027COLUMN\u0027, N\u0027SystemInformationID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Date and time the record was last updated.\u0027, \u0027SCHEMA\u0027, N\u0027dbo\u0027, \u0027TABLE\u0027, N\u0027BuildVersion\u0027, \u0027COLUMN\u0027, N\u0027VersionDate\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Default constraint value of GETDATE()\u0027, \u0027SCHEMA\u0027, N\u0027dbo\u0027, \u0027TABLE\u0027, N\u0027BuildVersion\u0027, \u0027CONSTRAINT\u0027, N\u0027DF_BuildVersion_ModifiedDate\u0027\\r\\nGO\\r\\n"
        },
        {
          "objectType": "Table",
          "name": "ErrorLog",
          "schema": "dbo",
          "definitionBefore": "",
          "definitionAfter": "CREATE TABLE [dbo].[ErrorLog]\\r\\n(\\r\\n[ErrorLogID] [int] NOT NULL IDENTITY(1, 1),\\r\\n[ErrorTime] [datetime] NOT NULL CONSTRAINT [DF_ErrorLog_ErrorTime] DEFAULT (getdate()),\\r\\n[UserName] [sys].[sysname] NOT NULL,\\r\\n[ErrorNumber] [int] NOT NULL,\\r\\n[ErrorSeverity] [int] NULL,\\r\\n[ErrorState] [int] NULL,\\r\\n[ErrorProcedure] [nvarchar] (126) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\\r\\n[ErrorLine] [int] NULL,\\r\\n[ErrorMessage] [nvarchar] (4000) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL\\r\\n)\\r\\nGO\\r\\nALTER TABLE [dbo].[ErrorLog] ADD CONSTRAINT [PK_ErrorLog_ErrorLogID] PRIMARY KEY CLUSTERED ([ErrorLogID])\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Audit table tracking errors in the the AdventureWorks database that are caught by the CATCH block of a TRY...CATCH construct. Data is inserted by stored procedure dbo.uspLogError when it is executed from inside the CATCH block of a TRY...CATCH construct.\u0027, \u0027SCHEMA\u0027, N\u0027dbo\u0027, \u0027TABLE\u0027, N\u0027ErrorLog\u0027, NULL, NULL\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027The line number at which the error occurred.\u0027, \u0027SCHEMA\u0027, N\u0027dbo\u0027, \u0027TABLE\u0027, N\u0027ErrorLog\u0027, \u0027COLUMN\u0027, N\u0027ErrorLine\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Primary key for ErrorLog records.\u0027, \u0027SCHEMA\u0027, N\u0027dbo\u0027, \u0027TABLE\u0027, N\u0027ErrorLog\u0027, \u0027COLUMN\u0027, N\u0027ErrorLogID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027The message text of the error that occurred.\u0027, \u0027SCHEMA\u0027, N\u0027dbo\u0027, \u0027TABLE\u0027, N\u0027ErrorLog\u0027, \u0027COLUMN\u0027, N\u0027ErrorMessage\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027The error number of the error that occurred.\u0027, \u0027SCHEMA\u0027, N\u0027dbo\u0027, \u0027TABLE\u0027, N\u0027ErrorLog\u0027, \u0027COLUMN\u0027, N\u0027ErrorNumber\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027The name of the stored procedure or trigger where the error occurred.\u0027, \u0027SCHEMA\u0027, N\u0027dbo\u0027, \u0027TABLE\u0027, N\u0027ErrorLog\u0027, \u0027COLUMN\u0027, N\u0027ErrorProcedure\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027The severity of the error that occurred.\u0027, \u0027SCHEMA\u0027, N\u0027dbo\u0027, \u0027TABLE\u0027, N\u0027ErrorLog\u0027, \u0027COLUMN\u0027, N\u0027ErrorSeverity\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027The state number of the error that occurred.\u0027, \u0027SCHEMA\u0027, N\u0027dbo\u0027, \u0027TABLE\u0027, N\u0027ErrorLog\u0027, \u0027COLUMN\u0027, N\u0027ErrorState\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027The date and time at which the error occurred.\u0027, \u0027SCHEMA\u0027, N\u0027dbo\u0027, \u0027TABLE\u0027, N\u0027ErrorLog\u0027, \u0027COLUMN\u0027, N\u0027ErrorTime\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027The user who executed the batch in which the error occurred.\u0027, \u0027SCHEMA\u0027, N\u0027dbo\u0027, \u0027TABLE\u0027, N\u0027ErrorLog\u0027, \u0027COLUMN\u0027, N\u0027UserName\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Default constraint value of GETDATE()\u0027, \u0027SCHEMA\u0027, N\u0027dbo\u0027, \u0027TABLE\u0027, N\u0027ErrorLog\u0027, \u0027CONSTRAINT\u0027, N\u0027DF_ErrorLog_ErrorTime\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Primary key (clustered) constraint\u0027, \u0027SCHEMA\u0027, N\u0027dbo\u0027, \u0027TABLE\u0027, N\u0027ErrorLog\u0027, \u0027CONSTRAINT\u0027, N\u0027PK_ErrorLog_ErrorLogID\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Clustered index created by a primary key constraint.\u0027, \u0027SCHEMA\u0027, N\u0027dbo\u0027, \u0027TABLE\u0027, N\u0027ErrorLog\u0027, \u0027INDEX\u0027, N\u0027PK_ErrorLog_ErrorLogID\u0027\\r\\nGO\\r\\n"
        },
        {
          "objectType": "StoredProcedure",
          "name": "uspLogError",
          "schema": "dbo",
          "definitionBefore": "",
          "definitionAfter": "\\r\\n-- uspLogError logs error information in the ErrorLog table about the \\r\\n-- error that caused execution to jump to the CATCH block of a \\r\\n-- TRY...CATCH construct. This should be executed from within the scope \\r\\n-- of a CATCH block otherwise it will return without inserting error \\r\\n-- information. \\r\\nCREATE PROCEDURE [dbo].[uspLogError] \\r\\n    @ErrorLogID [int] \u003d 0 OUTPUT -- contains the ErrorLogID of the row inserted\\r\\nAS                               -- by uspLogError in the ErrorLog table\\r\\nBEGIN\\r\\n    SET NOCOUNT ON;\\r\\n\\r\\n    -- Output parameter value of 0 indicates that error \\r\\n    -- information was not logged\\r\\n    SET @ErrorLogID \u003d 0;\\r\\n\\r\\n    BEGIN TRY\\r\\n        -- Return if there is no error information to log\\r\\n        IF ERROR_NUMBER() IS NULL\\r\\n            RETURN;\\r\\n\\r\\n        -- Return if inside an uncommittable transaction.\\r\\n        -- Data insertion/modification is not allowed when \\r\\n        -- a transaction is in an uncommittable state.\\r\\n        IF XACT_STATE() \u003d -1\\r\\n        BEGIN\\r\\n            PRINT \u0027Cannot log error since the current transaction is in an uncommittable state. \u0027 \\r\\n                + \u0027Rollback the transaction before executing uspLogError in order to successfully log error information.\u0027;\\r\\n            RETURN;\\r\\n        END\\r\\n\\r\\n        INSERT [dbo].[ErrorLog] \\r\\n            (\\r\\n            [UserName], \\r\\n            [ErrorNumber], \\r\\n            [ErrorSeverity], \\r\\n            [ErrorState], \\r\\n            [ErrorProcedure], \\r\\n            [ErrorLine], \\r\\n            [ErrorMessage]\\r\\n            ) \\r\\n        VALUES \\r\\n            (\\r\\n            CONVERT(sysname, CURRENT_USER), \\r\\n            ERROR_NUMBER(),\\r\\n            ERROR_SEVERITY(),\\r\\n            ERROR_STATE(),\\r\\n            ERROR_PROCEDURE(),\\r\\n            ERROR_LINE(),\\r\\n            ERROR_MESSAGE()\\r\\n            );\\r\\n\\r\\n        -- Pass back the ErrorLogID of the row inserted\\r\\n        SET @ErrorLogID \u003d @@IDENTITY;\\r\\n    END TRY\\r\\n    BEGIN CATCH\\r\\n        PRINT \u0027An error occurred in stored procedure uspLogError: \u0027;\\r\\n        EXECUTE [dbo].[uspPrintError];\\r\\n        RETURN -1;\\r\\n    END CATCH\\r\\nEND;\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Logs error information in the ErrorLog table about the error that caused execution to jump to the CATCH block of a TRY...CATCH construct. Should be executed from within the scope of a CATCH block otherwise it will return without inserting error information.\u0027, \u0027SCHEMA\u0027, N\u0027dbo\u0027, \u0027PROCEDURE\u0027, N\u0027uspLogError\u0027, NULL, NULL\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Output parameter for the stored procedure uspLogError. Contains the ErrorLogID value corresponding to the row inserted by uspLogError in the ErrorLog table.\u0027, \u0027SCHEMA\u0027, N\u0027dbo\u0027, \u0027PROCEDURE\u0027, N\u0027uspLogError\u0027, \u0027PARAMETER\u0027, N\u0027@ErrorLogID\u0027\\r\\nGO\\r\\n"
        },
        {
          "objectType": "StoredProcedure",
          "name": "uspPrintError",
          "schema": "dbo",
          "definitionBefore": "",
          "definitionAfter": "\\r\\n-- uspPrintError prints error information about the error that caused \\r\\n-- execution to jump to the CATCH block of a TRY...CATCH construct. \\r\\n-- Should be executed from within the scope of a CATCH block otherwise \\r\\n-- it will return without printing any error information.\\r\\nCREATE PROCEDURE [dbo].[uspPrintError] \\r\\nAS\\r\\nBEGIN\\r\\n    SET NOCOUNT ON;\\r\\n\\r\\n    -- Print error information. \\r\\n    PRINT \u0027Error \u0027 + CONVERT(varchar(50), ERROR_NUMBER()) +\\r\\n          \u0027, Severity \u0027 + CONVERT(varchar(5), ERROR_SEVERITY()) +\\r\\n          \u0027, State \u0027 + CONVERT(varchar(5), ERROR_STATE()) + \\r\\n          \u0027, Procedure \u0027 + ISNULL(ERROR_PROCEDURE(), \u0027-\u0027) + \\r\\n          \u0027, Line \u0027 + CONVERT(varchar(5), ERROR_LINE());\\r\\n    PRINT ERROR_MESSAGE();\\r\\nEND;\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Prints error information about the error that caused execution to jump to the CATCH block of a TRY...CATCH construct. Should be executed from within the scope of a CATCH block otherwise it will return without printing any error information.\u0027, \u0027SCHEMA\u0027, N\u0027dbo\u0027, \u0027PROCEDURE\u0027, N\u0027uspPrintError\u0027, NULL, NULL\\r\\nGO\\r\\n"
        },
        {
          "objectType": "View",
          "name": "vGetAllCategories",
          "schema": "SalesLT",
          "definitionBefore": "",
          "definitionAfter": "\\r\\nCREATE VIEW [SalesLT].[vGetAllCategories]\\r\\nWITH SCHEMABINDING \\r\\nAS \\r\\n-- Returns the CustomerID, first name, and last name for the specified customer.\\r\\n\\r\\nWITH CategoryCTE([ParentProductCategoryID], [ProductCategoryID], [Name]) AS \\r\\n(\\r\\n\\tSELECT [ParentProductCategoryID], [ProductCategoryID], [Name]\\r\\n\\tFROM SalesLT.ProductCategory\\r\\n\\tWHERE ParentProductCategoryID IS NULL\\r\\n\\r\\nUNION ALL\\r\\n\\r\\n\\tSELECT C.[ParentProductCategoryID], C.[ProductCategoryID], C.[Name]\\r\\n\\tFROM SalesLT.ProductCategory AS C\\r\\n\\tINNER JOIN CategoryCTE AS BC ON BC.ProductCategoryID \u003d C.ParentProductCategoryID\\r\\n)\\r\\n\\r\\nSELECT PC.[Name] AS [ParentProductCategoryName], CCTE.[Name] as [ProductCategoryName], CCTE.[ProductCategoryID]  \\r\\nFROM CategoryCTE AS CCTE\\r\\nJOIN SalesLT.ProductCategory AS PC \\r\\nON PC.[ProductCategoryID] \u003d CCTE.[ParentProductCategoryID]\\r\\n\\r\\nGO\\r\\n"
        },
        {
          "objectType": "View",
          "name": "vProductAndDescription",
          "schema": "SalesLT",
          "definitionBefore": "",
          "definitionAfter": "\\r\\n\\r\\nCREATE VIEW [SalesLT].[vProductAndDescription] \\r\\nWITH SCHEMABINDING \\r\\nAS \\r\\n-- View (indexed or standard) to display products and product descriptions by language.\\r\\nSELECT \\r\\n    p.[ProductID] \\r\\n    ,p.[Name] \\r\\n    ,pm.[Name] AS [ProductModel] \\r\\n    ,pmx.[Culture] \\r\\n    ,pd.[Description] \\r\\nFROM [SalesLT].[Product] p \\r\\n    INNER JOIN [SalesLT].[ProductModel] pm \\r\\n    ON p.[ProductModelID] \u003d pm.[ProductModelID] \\r\\n    INNER JOIN [SalesLT].[ProductModelProductDescription] pmx \\r\\n    ON pm.[ProductModelID] \u003d pmx.[ProductModelID] \\r\\n    INNER JOIN [SalesLT].[ProductDescription] pd \\r\\n    ON pmx.[ProductDescriptionID] \u003d pd.[ProductDescriptionID];\\r\\nGO\\r\\nCREATE UNIQUE CLUSTERED INDEX [IX_vProductAndDescription] ON [SalesLT].[vProductAndDescription] ([Culture], [ProductID])\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Product names and descriptions. Product descriptions are provided in multiple languages.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027VIEW\u0027, N\u0027vProductAndDescription\u0027, NULL, NULL\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Clustered index on the view vProductAndDescription.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027VIEW\u0027, N\u0027vProductAndDescription\u0027, \u0027INDEX\u0027, N\u0027IX_vProductAndDescription\u0027\\r\\nGO\\r\\n"
        },
        {
          "objectType": "View",
          "name": "vProductModelCatalogDescription",
          "schema": "SalesLT",
          "definitionBefore": "",
          "definitionAfter": "\\r\\nCREATE VIEW [SalesLT].[vProductModelCatalogDescription] \\r\\nAS \\r\\nSELECT \\r\\n    [ProductModelID] \\r\\n    ,[Name] \\r\\n    ,[CatalogDescription].value(N\u0027declare namespace p1\u003dhttp://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription; \\r\\n        declare namespace html\u003dhttp://www.w3.org/1999/xhtml; \\r\\n        (/p1:ProductDescription/p1:Summary/html:p)[1]\u0027, \u0027nvarchar(max)\u0027) AS [Summary] \\r\\n    ,[CatalogDescription].value(N\u0027declare namespace p1\u003dhttp://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription; \\r\\n        (/p1:ProductDescription/p1:Manufacturer/p1:Name)[1]\u0027, \u0027nvarchar(max)\u0027) AS [Manufacturer] \\r\\n    ,[CatalogDescription].value(N\u0027declare namespace p1\u003dhttp://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription; \\r\\n        (/p1:ProductDescription/p1:Manufacturer/p1:Copyright)[1]\u0027, \u0027nvarchar(30)\u0027) AS [Copyright] \\r\\n    ,[CatalogDescription].value(N\u0027declare namespace p1\u003dhttp://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription; \\r\\n        (/p1:ProductDescription/p1:Manufacturer/p1:ProductURL)[1]\u0027, \u0027nvarchar(256)\u0027) AS [ProductURL] \\r\\n    ,[CatalogDescription].value(N\u0027declare namespace p1\u003dhttp://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription; \\r\\n        declare namespace wm\u003dhttp://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelWarrAndMain; \\r\\n        (/p1:ProductDescription/p1:Features/wm:Warranty/wm:WarrantyPeriod)[1]\u0027, \u0027nvarchar(256)\u0027) AS [WarrantyPeriod] \\r\\n    ,[CatalogDescription].value(N\u0027declare namespace p1\u003dhttp://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription; \\r\\n        declare namespace wm\u003dhttp://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelWarrAndMain; \\r\\n        (/p1:ProductDescription/p1:Features/wm:Warranty/wm:Description)[1]\u0027, \u0027nvarchar(256)\u0027) AS [WarrantyDescription] \\r\\n    ,[CatalogDescription].value(N\u0027declare namespace p1\u003dhttp://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription; \\r\\n        declare namespace wm\u003dhttp://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelWarrAndMain; \\r\\n        (/p1:ProductDescription/p1:Features/wm:Maintenance/wm:NoOfYears)[1]\u0027, \u0027nvarchar(256)\u0027) AS [NoOfYears] \\r\\n    ,[CatalogDescription].value(N\u0027declare namespace p1\u003dhttp://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription; \\r\\n        declare namespace wm\u003dhttp://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelWarrAndMain; \\r\\n        (/p1:ProductDescription/p1:Features/wm:Maintenance/wm:Description)[1]\u0027, \u0027nvarchar(256)\u0027) AS [MaintenanceDescription] \\r\\n    ,[CatalogDescription].value(N\u0027declare namespace p1\u003dhttp://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription; \\r\\n        declare namespace wf\u003dhttp://www.adventure-works.com/schemas/OtherFeatures; \\r\\n        (/p1:ProductDescription/p1:Features/wf:wheel)[1]\u0027, \u0027nvarchar(256)\u0027) AS [Wheel] \\r\\n    ,[CatalogDescription].value(N\u0027declare namespace p1\u003dhttp://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription; \\r\\n        declare namespace wf\u003dhttp://www.adventure-works.com/schemas/OtherFeatures; \\r\\n        (/p1:ProductDescription/p1:Features/wf:saddle)[1]\u0027, \u0027nvarchar(256)\u0027) AS [Saddle] \\r\\n    ,[CatalogDescription].value(N\u0027declare namespace p1\u003dhttp://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription; \\r\\n        declare namespace wf\u003dhttp://www.adventure-works.com/schemas/OtherFeatures; \\r\\n        (/p1:ProductDescription/p1:Features/wf:pedal)[1]\u0027, \u0027nvarchar(256)\u0027) AS [Pedal] \\r\\n    ,[CatalogDescription].value(N\u0027declare namespace p1\u003dhttp://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription; \\r\\n        declare namespace wf\u003dhttp://www.adventure-works.com/schemas/OtherFeatures; \\r\\n        (/p1:ProductDescription/p1:Features/wf:BikeFrame)[1]\u0027, \u0027nvarchar(max)\u0027) AS [BikeFrame] \\r\\n    ,[CatalogDescription].value(N\u0027declare namespace p1\u003dhttp://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription; \\r\\n        declare namespace wf\u003dhttp://www.adventure-works.com/schemas/OtherFeatures; \\r\\n        (/p1:ProductDescription/p1:Features/wf:crankset)[1]\u0027, \u0027nvarchar(256)\u0027) AS [Crankset] \\r\\n    ,[CatalogDescription].value(N\u0027declare namespace p1\u003dhttp://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription; \\r\\n        (/p1:ProductDescription/p1:Picture/p1:Angle)[1]\u0027, \u0027nvarchar(256)\u0027) AS [PictureAngle] \\r\\n    ,[CatalogDescription].value(N\u0027declare namespace p1\u003dhttp://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription; \\r\\n        (/p1:ProductDescription/p1:Picture/p1:Size)[1]\u0027, \u0027nvarchar(256)\u0027) AS [PictureSize] \\r\\n    ,[CatalogDescription].value(N\u0027declare namespace p1\u003dhttp://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription; \\r\\n        (/p1:ProductDescription/p1:Picture/p1:ProductPhotoID)[1]\u0027, \u0027nvarchar(256)\u0027) AS [ProductPhotoID] \\r\\n    ,[CatalogDescription].value(N\u0027declare namespace p1\u003dhttp://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription; \\r\\n        (/p1:ProductDescription/p1:Specifications/Material)[1]\u0027, \u0027nvarchar(256)\u0027) AS [Material] \\r\\n    ,[CatalogDescription].value(N\u0027declare namespace p1\u003dhttp://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription; \\r\\n        (/p1:ProductDescription/p1:Specifications/Color)[1]\u0027, \u0027nvarchar(256)\u0027) AS [Color] \\r\\n    ,[CatalogDescription].value(N\u0027declare namespace p1\u003dhttp://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription; \\r\\n        (/p1:ProductDescription/p1:Specifications/ProductLine)[1]\u0027, \u0027nvarchar(256)\u0027) AS [ProductLine] \\r\\n    ,[CatalogDescription].value(N\u0027declare namespace p1\u003dhttp://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription; \\r\\n        (/p1:ProductDescription/p1:Specifications/Style)[1]\u0027, \u0027nvarchar(256)\u0027) AS [Style] \\r\\n    ,[CatalogDescription].value(N\u0027declare namespace p1\u003dhttp://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription; \\r\\n        (/p1:ProductDescription/p1:Specifications/RiderExperience)[1]\u0027, \u0027nvarchar(1024)\u0027) AS [RiderExperience] \\r\\n    ,[rowguid] \\r\\n    ,[ModifiedDate]\\r\\nFROM [SalesLT].[ProductModel] \\r\\nWHERE [CatalogDescription] IS NOT NULL;\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Displays the content from each element in the xml column CatalogDescription for each product in the Sales.ProductModel table that has catalog data.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027VIEW\u0027, N\u0027vProductModelCatalogDescription\u0027, NULL, NULL\\r\\nGO\\r\\n"
        },
        {
          "objectType": "Function",
          "name": "ufnGetAllCategories",
          "schema": "dbo",
          "definitionBefore": "",
          "definitionAfter": "\\r\\n-- DROP FUNCTION [dbo].[ufnGetAllCategories]\\r\\n\\r\\nCREATE FUNCTION [dbo].[ufnGetAllCategories]()\\r\\nRETURNS @retCategoryInformation TABLE \\r\\n(\\r\\n    -- Columns returned by the function\\r\\n    [ParentProductCategoryName] [nvarchar](50) NULL, \\r\\n    [ProductCategoryName] [nvarchar](50) NOT NULL,\\r\\n\\t[ProductCategoryID] [int] NOT NULL\\r\\n)\\r\\nAS \\r\\n-- Returns the CustomerID, first name, and last name for the specified customer.\\r\\nBEGIN\\r\\n\\tWITH CategoryCTE([ParentProductCategoryID], [ProductCategoryID], [Name]) AS \\r\\n\\t(\\r\\n\\t\\tSELECT [ParentProductCategoryID], [ProductCategoryID], [Name]\\r\\n\\t\\tFROM SalesLT.ProductCategory\\r\\n\\t\\tWHERE ParentProductCategoryID IS NULL\\r\\n\\r\\n\\tUNION ALL\\r\\n\\r\\n\\t\\tSELECT C.[ParentProductCategoryID], C.[ProductCategoryID], C.[Name]\\r\\n\\t\\tFROM SalesLT.ProductCategory AS C\\r\\n\\t\\tINNER JOIN CategoryCTE AS BC ON BC.ProductCategoryID \u003d C.ParentProductCategoryID\\r\\n\\t)\\r\\n\\r\\n\\tINSERT INTO @retCategoryInformation\\r\\n\\tSELECT PC.[Name] AS [ParentProductCategoryName], CCTE.[Name] as [ProductCategoryName], CCTE.[ProductCategoryID]  \\r\\n\\tFROM CategoryCTE AS CCTE\\r\\n\\tJOIN SalesLT.ProductCategory AS PC \\r\\n\\tON PC.[ProductCategoryID] \u003d CCTE.[ParentProductCategoryID];\\r\\n\\tRETURN;\\r\\nEND;\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Table value function returning every product category and its parent, if applicable.\u0027, \u0027SCHEMA\u0027, N\u0027dbo\u0027, \u0027FUNCTION\u0027, N\u0027ufnGetAllCategories\u0027, NULL, NULL\\r\\nGO\\r\\n"
        },
        {
          "objectType": "Function",
          "name": "ufnGetCustomerInformation",
          "schema": "dbo",
          "definitionBefore": "",
          "definitionAfter": "\\r\\nCREATE FUNCTION [dbo].[ufnGetCustomerInformation](@CustomerID int)\\r\\nRETURNS TABLE \\r\\nAS \\r\\n-- Returns the CustomerID, first name, and last name for the specified customer.\\r\\nRETURN (\\r\\n    SELECT \\r\\n        CustomerID, \\r\\n        FirstName, \\r\\n        LastName\\r\\n    FROM [SalesLT].[Customer] \\r\\n    WHERE [CustomerID] \u003d @CustomerID\\r\\n);\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Table value function returning the customer ID, first name, and last name for a given customer.\u0027, \u0027SCHEMA\u0027, N\u0027dbo\u0027, \u0027FUNCTION\u0027, N\u0027ufnGetCustomerInformation\u0027, NULL, NULL\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Input parameter for the table value function ufnGetCustomerInformation. Enter a valid CustomerID from the Sales.Customer table.\u0027, \u0027SCHEMA\u0027, N\u0027dbo\u0027, \u0027FUNCTION\u0027, N\u0027ufnGetCustomerInformation\u0027, \u0027PARAMETER\u0027, N\u0027@CustomerID\u0027\\r\\nGO\\r\\n"
        },
        {
          "objectType": "Function",
          "name": "ufnGetSalesOrderStatusText",
          "schema": "dbo",
          "definitionBefore": "",
          "definitionAfter": "\\r\\n\\r\\nCREATE FUNCTION [dbo].[ufnGetSalesOrderStatusText](@Status [tinyint])\\r\\nRETURNS [nvarchar](15) \\r\\nAS \\r\\n-- Returns the sales order status text representation for the status value.\\r\\nBEGIN\\r\\n    DECLARE @ret [nvarchar](15);\\r\\n\\r\\n    SET @ret \u003d \\r\\n        CASE @Status\\r\\n            WHEN 1 THEN \u0027In process\u0027\\r\\n            WHEN 2 THEN \u0027Approved\u0027\\r\\n            WHEN 3 THEN \u0027Backordered\u0027\\r\\n            WHEN 4 THEN \u0027Rejected\u0027\\r\\n            WHEN 5 THEN \u0027Shipped\u0027\\r\\n            WHEN 6 THEN \u0027Cancelled\u0027\\r\\n            ELSE \u0027** Invalid **\u0027\\r\\n        END;\\r\\n    \\r\\n    RETURN @ret\\r\\nEND;\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Scalar function returning the text representation of the Status column in the SalesOrderHeader table.\u0027, \u0027SCHEMA\u0027, N\u0027dbo\u0027, \u0027FUNCTION\u0027, N\u0027ufnGetSalesOrderStatusText\u0027, NULL, NULL\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Input parameter for the scalar function ufnGetSalesOrderStatusText. Enter a valid integer.\u0027, \u0027SCHEMA\u0027, N\u0027dbo\u0027, \u0027FUNCTION\u0027, N\u0027ufnGetSalesOrderStatusText\u0027, \u0027PARAMETER\u0027, N\u0027@Status\u0027\\r\\nGO\\r\\n"
        },
        {
          "objectType": "UserDefinedType",
          "name": "AccountNumber",
          "schema": "dbo",
          "definitionBefore": "",
          "definitionAfter": "CREATE TYPE [dbo].[AccountNumber] FROM nvarchar (15) NULL\\r\\nGO\\r\\n"
        },
        {
          "objectType": "UserDefinedType",
          "name": "Flag",
          "schema": "dbo",
          "definitionBefore": "",
          "definitionAfter": "CREATE TYPE [dbo].[Flag] FROM bit NOT NULL\\r\\nGO\\r\\n"
        },
        {
          "objectType": "UserDefinedType",
          "name": "NameStyle",
          "schema": "dbo",
          "definitionBefore": "",
          "definitionAfter": "CREATE TYPE [dbo].[NameStyle] FROM bit NOT NULL\\r\\nGO\\r\\n"
        },
        {
          "objectType": "UserDefinedType",
          "name": "Name",
          "schema": "dbo",
          "definitionBefore": "",
          "definitionAfter": "CREATE TYPE [dbo].[Name] FROM nvarchar (50) NULL\\r\\nGO\\r\\n"
        },
        {
          "objectType": "UserDefinedType",
          "name": "OrderNumber",
          "schema": "dbo",
          "definitionBefore": "",
          "definitionAfter": "CREATE TYPE [dbo].[OrderNumber] FROM nvarchar (25) NULL\\r\\nGO\\r\\n"
        },
        {
          "objectType": "UserDefinedType",
          "name": "Phone",
          "schema": "dbo",
          "definitionBefore": "",
          "definitionAfter": "CREATE TYPE [dbo].[Phone] FROM nvarchar (25) NULL\\r\\nGO\\r\\n"
        },
        {
          "objectType": "XmlSchemaCollection",
          "name": "ProductDescriptionSchemaCollection",
          "schema": "SalesLT",
          "definitionBefore": "",
          "definitionAfter": "CREATE XML SCHEMA COLLECTION [SalesLT].[ProductDescriptionSchemaCollection]\\r\\nAS N\u0027\u003cxsd:schema xmlns:xsd\u003dhttp://www.w3.org/2001/XMLSchema xmlns:t\u003dhttp://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelWarrAndMain targetNamespace\u003dhttp://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelWarrAndMain elementFormDefault\u003dqualified\u003e\\r\\n  \u003cxsd:element name\u003dMaintenance\u003e\\r\\n    \u003cxsd:complexType\u003e\\r\\n      \u003cxsd:complexContent\u003e\\r\\n        \u003cxsd:restriction base\u003dxsd:anyType\u003e\\r\\n          \u003cxsd:sequence\u003e\\r\\n            \u003cxsd:element name\u003dNoOfYears type\u003dxsd:string /\u003e\\r\\n            \u003cxsd:element name\u003dDescription type\u003dxsd:string /\u003e\\r\\n          \u003c/xsd:sequence\u003e\\r\\n        \u003c/xsd:restriction\u003e\\r\\n      \u003c/xsd:complexContent\u003e\\r\\n    \u003c/xsd:complexType\u003e\\r\\n  \u003c/xsd:element\u003e\\r\\n  \u003cxsd:element name\u003dWarranty\u003e\\r\\n    \u003cxsd:complexType\u003e\\r\\n      \u003cxsd:complexContent\u003e\\r\\n        \u003cxsd:restriction base\u003dxsd:anyType\u003e\\r\\n          \u003cxsd:sequence\u003e\\r\\n            \u003cxsd:element name\u003dWarrantyPeriod type\u003dxsd:string /\u003e\\r\\n            \u003cxsd:element name\u003dDescription type\u003dxsd:string /\u003e\\r\\n          \u003c/xsd:sequence\u003e\\r\\n        \u003c/xsd:restriction\u003e\\r\\n      \u003c/xsd:complexContent\u003e\\r\\n    \u003c/xsd:complexType\u003e\\r\\n  \u003c/xsd:element\u003e\\r\\n\u003c/xsd:schema\u003e\\r\\n\u003cxsd:schema xmlns:xsd\u003dhttp://www.w3.org/2001/XMLSchema xmlns:ns1\u003dhttp://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelWarrAndMain xmlns:t\u003dhttp://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription targetNamespace\u003dhttp://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription elementFormDefault\u003dqualified\u003e\\r\\n  \u003cxsd:import namespace\u003dhttp://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelWarrAndMain /\u003e\\r\\n  \u003cxsd:element name\u003dCode type\u003dxsd:string /\u003e\\r\\n  \u003cxsd:element name\u003dDescription type\u003dxsd:string /\u003e\\r\\n  \u003cxsd:element name\u003dProductDescription type\u003dt:ProductDescription /\u003e\\r\\n  \u003cxsd:element name\u003dTaxonomy type\u003dxsd:string /\u003e\\r\\n  \u003cxsd:complexType name\u003dCategory\u003e\\r\\n    \u003cxsd:complexContent\u003e\\r\\n      \u003cxsd:restriction base\u003dxsd:anyType\u003e\\r\\n        \u003cxsd:sequence\u003e\\r\\n          \u003cxsd:element ref\u003dt:Taxonomy /\u003e\\r\\n          \u003cxsd:element ref\u003dt:Code /\u003e\\r\\n          \u003cxsd:element ref\u003dt:Description minOccurs\u003d0 /\u003e\\r\\n        \u003c/xsd:sequence\u003e\\r\\n      \u003c/xsd:restriction\u003e\\r\\n    \u003c/xsd:complexContent\u003e\\r\\n  \u003c/xsd:complexType\u003e\\r\\n  \u003cxsd:complexType name\u003dFeatures mixed\u003dtrue\u003e\\r\\n    \u003cxsd:complexContent mixed\u003dtrue\u003e\\r\\n      \u003cxsd:restriction base\u003dxsd:anyType\u003e\\r\\n        \u003cxsd:sequence\u003e\\r\\n          \u003cxsd:element ref\u003dns1:Warranty /\u003e\\r\\n          \u003cxsd:element ref\u003dns1:Maintenance /\u003e\\r\\n          \u003cxsd:any namespace\u003d##other processContents\u003dskip minOccurs\u003d0 maxOccurs\u003dunbounded /\u003e\\r\\n        \u003c/xsd:sequence\u003e\\r\\n      \u003c/xsd:restriction\u003e\\r\\n    \u003c/xsd:complexContent\u003e\\r\\n  \u003c/xsd:complexType\u003e\\r\\n  \u003cxsd:complexType name\u003dManufacturer\u003e\\r\\n    \u003cxsd:complexContent\u003e\\r\\n      \u003cxsd:restriction base\u003dxsd:anyType\u003e\\r\\n        \u003cxsd:sequence\u003e\\r\\n          \u003cxsd:element name\u003dName type\u003dxsd:string minOccurs\u003d0 /\u003e\\r\\n          \u003cxsd:element name\u003dCopyrightURL type\u003dxsd:string minOccurs\u003d0 /\u003e\\r\\n          \u003cxsd:element name\u003dCopyright type\u003dxsd:string minOccurs\u003d0 /\u003e\\r\\n          \u003cxsd:element name\u003dProductURL type\u003dxsd:string minOccurs\u003d0 /\u003e\\r\\n        \u003c/xsd:sequence\u003e\\r\\n      \u003c/xsd:restriction\u003e\\r\\n    \u003c/xsd:complexContent\u003e\\r\\n  \u003c/xsd:complexType\u003e\\r\\n  \u003cxsd:complexType name\u003dPicture\u003e\\r\\n    \u003cxsd:complexContent\u003e\\r\\n      \u003cxsd:restriction base\u003dxsd:anyType\u003e\\r\\n        \u003cxsd:sequence\u003e\\r\\n          \u003cxsd:element name\u003dName type\u003dxsd:string minOccurs\u003d0 /\u003e\\r\\n          \u003cxsd:element name\u003dAngle type\u003dxsd:string minOccurs\u003d0 /\u003e\\r\\n          \u003cxsd:element name\u003dSize type\u003dxsd:string minOccurs\u003d0 /\u003e\\r\\n          \u003cxsd:element name\u003dProductPhotoID type\u003dxsd:integer minOccurs\u003d0 /\u003e\\r\\n        \u003c/xsd:sequence\u003e\\r\\n      \u003c/xsd:restriction\u003e\\r\\n    \u003c/xsd:complexContent\u003e\\r\\n  \u003c/xsd:complexType\u003e\\r\\n  \u003cxsd:complexType name\u003dProductDescription\u003e\\r\\n    \u003cxsd:complexContent\u003e\\r\\n      \u003cxsd:restriction base\u003dxsd:anyType\u003e\\r\\n        \u003cxsd:sequence\u003e\\r\\n          \u003cxsd:element name\u003dSummary type\u003dt:Summary minOccurs\u003d0 /\u003e\\r\\n          \u003cxsd:element name\u003dManufacturer type\u003dt:Manufacturer minOccurs\u003d0 /\u003e\\r\\n          \u003cxsd:element name\u003dFeatures type\u003dt:Features minOccurs\u003d0 maxOccurs\u003dunbounded /\u003e\\r\\n          \u003cxsd:element name\u003dPicture type\u003dt:Picture minOccurs\u003d0 maxOccurs\u003dunbounded /\u003e\\r\\n          \u003cxsd:element name\u003dCategory type\u003dt:Category minOccurs\u003d0 maxOccurs\u003dunbounded /\u003e\\r\\n          \u003cxsd:element name\u003dSpecifications type\u003dt:Specifications minOccurs\u003d0 maxOccurs\u003dunbounded /\u003e\\r\\n        \u003c/xsd:sequence\u003e\\r\\n        \u003cxsd:attribute name\u003dProductModelID type\u003dxsd:string /\u003e\\r\\n        \u003cxsd:attribute name\u003dProductModelName type\u003dxsd:string /\u003e\\r\\n      \u003c/xsd:restriction\u003e\\r\\n    \u003c/xsd:complexContent\u003e\\r\\n  \u003c/xsd:complexType\u003e\\r\\n  \u003cxsd:complexType name\u003dSpecifications mixed\u003dtrue\u003e\\r\\n    \u003cxsd:complexContent mixed\u003dtrue\u003e\\r\\n      \u003cxsd:restriction base\u003dxsd:anyType\u003e\\r\\n        \u003cxsd:sequence\u003e\\r\\n          \u003cxsd:any processContents\u003dskip minOccurs\u003d0 maxOccurs\u003dunbounded /\u003e\\r\\n        \u003c/xsd:sequence\u003e\\r\\n      \u003c/xsd:restriction\u003e\\r\\n    \u003c/xsd:complexContent\u003e\\r\\n  \u003c/xsd:complexType\u003e\\r\\n  \u003cxsd:complexType name\u003dSummary mixed\u003dtrue\u003e\\r\\n    \u003cxsd:complexContent mixed\u003dtrue\u003e\\r\\n      \u003cxsd:restriction base\u003dxsd:anyType\u003e\\r\\n        \u003cxsd:sequence\u003e\\r\\n          \u003cxsd:any namespace\u003dhttp://www.w3.org/1999/xhtml processContents\u003dskip minOccurs\u003d0 maxOccurs\u003dunbounded /\u003e\\r\\n        \u003c/xsd:sequence\u003e\\r\\n      \u003c/xsd:restriction\u003e\\r\\n    \u003c/xsd:complexContent\u003e\\r\\n  \u003c/xsd:complexType\u003e\\r\\n\u003c/xsd:schema\u003e\u0027\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Collection of XML schemas for the CatalogDescription column in the Sales.ProductModel table.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, \u0027XML SCHEMA COLLECTION\u0027, N\u0027ProductDescriptionSchemaCollection\u0027, NULL, NULL\\r\\nGO\\r\\n"
        },
        {
          "objectType": "Schema",
          "name": "SalesLT",
          "schema": "dbo",
          "definitionBefore": "",
          "definitionAfter": "CREATE SCHEMA [SalesLT]\\r\\nAUTHORIZATION [dbo]\\r\\nGO\\r\\nEXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027Contains objects related to products, customers, sales orders, and sales territories.\u0027, \u0027SCHEMA\u0027, N\u0027SalesLT\u0027, NULL, NULL, NULL, NULL\\r\\nGO\\r\\n"
        },
        {
          "objectType": "ExtendedProperty",
          "name": "MS_Description",
          "schema": "null",
          "definitionBefore": "",
          "definitionAfter": "EXEC sp_addextendedproperty N\u0027MS_Description\u0027, N\u0027AdventureWorksLT 2012 Sample OLTP Database\u0027, NULL, NULL, NULL, NULL, NULL, NULL\\r\\nGO\\r\\n"
        }
      ],
      "differences": [],
      "database": "AdventureWorksLT2019",
      "timestamp": "2023-02-24T12:20:20.331422700",
      "operation": "drift"
    },
    {
      "sql": "-- -\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n-- Flyway Dry Run (2023-02-24 12:20:41)\n-- -\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n\nUSE [AdventureWorksLT2019]\nGO\nSET ANSI_NULLS ON\nGO\nUSE [AdventureWorksLT2019]\nGO\nSET ANSI_NULLS ON\nGO\nUSE [AdventureWorksLT2019]\nGO\nSET ANSI_NULLS ON\nGO\n\n-- Executing: validate (with callbacks)\n-- ---------------------------------------------------------------------------------------\nUSE [AdventureWorksLT2019]\nGO\nSET ANSI_NULLS ON\nGO\n\n-- Executing: baseline (with callbacks)\n-- ---------------------------------------------------------------------------------------\nCREATE TABLE [AdventureWorksLT2019].[dbo].[flyway_schema_history] (\n    [installed_rank] INT NOT NULL,\n    [version] NVARCHAR(50),\n    [description] NVARCHAR(200),\n    [type] NVARCHAR(20) NOT NULL,\n    [script] NVARCHAR(1000) NOT NULL,\n    [checksum] INT,\n    [installed_by] NVARCHAR(100) NOT NULL,\n    [installed_on] DATETIME NOT NULL DEFAULT GETDATE(),\n    [execution_time] INT NOT NULL,\n    [success] BIT NOT NULL\n);\nINSERT INTO [AdventureWorksLT2019].[dbo].[flyway_schema_history] ([installed_rank], [version], [description], [type], [script], [checksum], [installed_by], [execution_time], [success]) VALUES (1, \u0027001.20230224120276\u0027, \u0027\u003c\u003c Flyway Baseline \u003e\u003e\u0027, \u0027BASELINE\u0027, \u0027\u003c\u003c Flyway Baseline \u003e\u003e\u0027, NULL, \u0027sa\u0027, 0, 1);\nALTER TABLE [AdventureWorksLT2019].[dbo].[flyway_schema_history] ADD CONSTRAINT [flyway_schema_history_pk] PRIMARY KEY ([installed_rank]);\nCREATE INDEX [flyway_schema_history_s_idx] ON [AdventureWorksLT2019].[dbo].[flyway_schema_history] ([success]);\nGO\n\nUSE [AdventureWorksLT2019]\nGO\nSET ANSI_NULLS ON\nGO\n\n-- Executing: migrate (with callbacks)\n-- ---------------------------------------------------------------------------------------\nUSE [AdventureWorksLT2019]\nGO\nSET ANSI_NULLS ON\nGO\n\n-- Executing: migrate -\u003e v002.20230224191036 (with callbacks)\n-- ---------------------------------------------------------------------------------------\n\n-- Source: C:\\Users\\BMac\\actions-runner-auto\\_work\\AdvWorksAuto\\AdvWorksAuto\\migrations\\V002_20230224191036__BMac.sql\n-- -------------------------------------------------------------------------------------------------------------------\nSET NUMERIC_ROUNDABORT OFF\nGO\nSET ANSI_PADDING, ANSI_WARNINGS, CONCAT_NULL_YIELDS_NULL, ARITHABORT, QUOTED_IDENTIFIER, ANSI_NULLS, NOCOUNT ON\nGO\nSET DATEFORMAT YMD\nGO\nSET XACT_ABORT ON\nGO\nPRINT(N\u0027Add 8 rows to [SalesLT].[Customer]\u0027)\r\nSET IDENTITY_INSERT [SalesLT].[Customer] ON\r\nINSERT INTO [SalesLT].[Customer] ([CustomerID], [NameStyle], [Title], [FirstName], [MiddleName], [LastName], [Suffix], [CompanyName], [SalesPerson], [EmailAddress], [Phone], [PasswordHash], [PasswordSalt], [rowguid], [ModifiedDate], [New], [New2]) VALUES (1, 0, N\u0027Mr.\u0027, N\u0027Orlando\u0027, N\u0027N.\u0027, N\u0027Gee\u0027, N\u00274\u0027, N\u0027A Bike Store\u0027, N\u0027adventure-works\\pamela0\u0027, N\u0027orlando0@adventure-works.com\u0027, N\u0027245-555-0173\u0027, \u0027L/Rlwxzp4w7RWmEgXX+/A7cXaePEPcp+KwQhl2fJL7w\u003d\u0027, NULL, \u00273f5ae95e-b87d-4aed-95b4-c3797afcb74f\u0027, \u00272005-08-01 00:00:00.000\u0027, NULL, NULL)\r\nINSERT INTO [SalesLT].[Customer] ([CustomerID], [NameStyle], [Title], [FirstName], [MiddleName], [LastName], [Suffix], [CompanyName], [SalesPerson], [EmailAddress], [Phone], [PasswordHash], [PasswordSalt], [rowguid], [ModifiedDate], [New], [New2]) VALUES (2, 0, N\u0027Mr.\u0027, N\u0027Keith\u0027, NULL, N\u0027Harris\u0027, N\u00273\u0027, N\u0027Progressive Sports\u0027, N\u0027adventure-works\\david8\u0027, N\u0027keith0@adventure-works.com\u0027, N\u0027170-555-0127\u0027, \u0027YPdtRdvqeAhj6wyxEsFdshBDNXxkCXn+CRgbvJItknw\u003d\u0027, NULL, \u0027e552f657-a9af-4a7d-a645-c429d6e02491\u0027, \u00272006-08-01 00:00:00.000\u0027, NULL, NULL)\r\nINSERT INTO [SalesLT].[Customer] ([CustomerID], [NameStyle], [Title], [FirstName], [MiddleName], [LastName], [Suffix], [CompanyName], [SalesPerson], [EmailAddress], [Phone], [PasswordHash], [PasswordSalt], [rowguid], [ModifiedDate], [New], [New2]) VALUES (3, 0, N\u0027Ms.\u0027, N\u0027Donna\u0027, N\u0027F.\u0027, N\u0027Carreras\u0027, N\u00272\u0027, N\u0027Advanced Bike Components\u0027, N\u0027adventure-works\\jillian0\u0027, N\u0027donna0@adventure-works.com\u0027, N\u0027279-555-0130\u0027, \u0027LNoK27abGQo48gGue3EBV/UrlYSToV0/s87dCRV7uJk\u003d\u0027, NULL, \u0027130774b1-db21-4ef3-98c8-c104bcd6ed6d\u0027, \u00272005-09-01 00:00:00.000\u0027, NULL, NULL)\r\nINSERT INTO [SalesLT].[Customer] ([CustomerID], [NameStyle], [Title], [FirstName], [MiddleName], [LastName], [Suffix], [CompanyName], [SalesPerson], [EmailAddress], [Phone], [PasswordHash], [PasswordSalt], [rowguid], [ModifiedDate], [New], [New2]) VALUES (4, 0, N\u0027Ms.\u0027, N\u0027Janet\u0027, N\u0027M.\u0027, N\u0027Gates\u0027, N\u00271\u0027, N\u0027Modular Cycle Systems\u0027, N\u0027adventure-works\\jillian0\u0027, N\u0027janet1@adventure-works.com\u0027, N\u0027710-555-0173\u0027, \u0027ElzTpSNbUW1Ut+L5cWlfR7MF6nBZia8WpmGaQPjLOJA\u003d\u0027, NULL, \u0027ff862851-1daa-4044-be7c-3e85583c054d\u0027, \u00272006-07-01 00:00:00.000\u0027, NULL, NULL)\r\nINSERT INTO [SalesLT].[Customer] ([CustomerID], [NameStyle], [Title], [FirstName], [MiddleName], [LastName], [Suffix], [CompanyName], [SalesPerson], [EmailAddress], [Phone], [PasswordHash], [PasswordSalt], [rowguid], [ModifiedDate], [New], [New2]) VALUES (5, 0, N\u0027Mr.\u0027, N\u0027Lucy\u0027, NULL, N\u0027Harrington\u0027, N\u0027newData2\u0027, N\u0027Metropolitan Sports Supply\u0027, N\u0027adventure-works\\shu0\u0027, N\u0027lucy0@adventure-works.com\u0027, N\u0027828-555-0186\u0027, \u0027KJqV15wsX3PG8TS5GSddp6LFFVdd3CoRftZM/tP0+R4\u003d\u0027, NULL, \u002783905bdc-6f5e-4f71-b162-c98da069f38a\u0027, \u00272006-09-01 00:00:00.000\u0027, NULL, NULL)\r\nINSERT INTO [SalesLT].[Customer] ([CustomerID], [NameStyle], [Title], [FirstName], [MiddleName], [LastName], [Suffix], [CompanyName], [SalesPerson], [EmailAddress], [Phone], [PasswordHash], [PasswordSalt], [rowguid], [ModifiedDate], [New], [New2]) VALUES (6, 0, N\u0027Ms.\u0027, N\u0027Rosmarie\u0027, N\u0027J.\u0027, N\u0027Carroll\u0027, N\u0027nextData\u0027, N\u0027Aerobic Exercise Company\u0027, N\u0027adventure-works\\linda3\u0027, N\u0027rosmarie0@adventure-works.com\u0027, N\u0027244-555-0112\u0027, \u0027OKT0scizCdIzymHHOtyJKQiC/fCILSooSZ8dQ2Y34VM\u003d\u0027, NULL, \u00271a92df88-bfa2-467d-bd54-fcb9e647fdd7\u0027, \u00272007-09-01 00:00:00.000\u0027, NULL, NULL)\r\nINSERT INTO [SalesLT].[Customer] ([CustomerID], [NameStyle], [Title], [FirstName], [MiddleName], [LastName], [Suffix], [CompanyName], [SalesPerson], [EmailAddress], [Phone], [PasswordHash], [PasswordSalt], [rowguid], [ModifiedDate], [New], [New2]) VALUES (7, 0, N\u0027Mr.\u0027, N\u0027Dominic\u0027, N\u0027P.\u0027, N\u0027Gash\u0027, NULL, N\u0027Associated Bikes\u0027, N\u0027adventure-works\\shu0\u0027, N\u0027dominic0@adventure-works.com\u0027, N\u0027192-555-0173\u0027, \u0027ZccoP/jZGQm+Xpzc7RKwDhS11YFNybwcPVRYTSNcnSg\u003d\u0027, NULL, \u002703e9273e-b193-448e-9823-fe0c44aeed78\u0027, \u00272006-07-01 00:00:00.000\u0027, NULL, NULL)\r\nINSERT INTO [SalesLT].[Customer] ([CustomerID], [NameStyle], [Title], [FirstName], [MiddleName], [LastName], [Suffix], [CompanyName], [SalesPerson], [EmailAddress], [Phone], [PasswordHash], [PasswordSalt], [rowguid], [ModifiedDate], [New], [New2]) VALUES (10, 0, N\u0027Ms.\u0027, N\u0027Kathleen\u0027, N\u0027M.\u0027, N\u0027Garza\u0027, NULL, N\u0027Rural Cycle Emporium\u0027, N\u0027adventure-works\\josé1\u0027, N\u0027kathleen0@adventure-works.com\u0027, N\u0027150-555-0127\u0027, \u0027Qa3aMCxNbVLGrc0b99KsbQqiVgwYDfHcsK9GZSUxcTM\u003d\u0027, NULL, \u0027cdb6698d-2ff1-4fba-8f22-60ad1d11dabd\u0027, \u00272006-09-01 00:00:00.000\u0027, NULL, NULL)\r\nSET IDENTITY_INSERT [SalesLT].[Customer] OFF\nGO\nINSERT INTO [AdventureWorksLT2019].[dbo].[flyway_schema_history] ([installed_rank], [version], [description], [type], [script], [checksum], [installed_by], [execution_time], [success]) VALUES (2, \u0027002.20230224191036\u0027, \u0027BMac\u0027, \u0027SQL\u0027, \u0027V002_20230224191036__BMac.sql\u0027, 892152019, \u0027sa\u0027, 18, 1)\nGO\nUSE [AdventureWorksLT2019]\nGO\nSET ANSI_NULLS ON\nGO\n",
      "timestamp": "2023-02-24T12:20:20.331422700",
      "operation": "dryrun"
    }
  ]
}