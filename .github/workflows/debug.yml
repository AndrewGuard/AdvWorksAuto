# Simple workflow for debugging github actions
name: DEBUG
run-name: DEBUG ${{ github.ref }}

on:
  # Triggers the workflow on push or pull request events but only for branches beginning with 'task' that have changes in the migrations folder.
  push:
    branches:
      - 'debug**'

  # Allows you to run this workflow manually from the Actions tab AND from other actions (fwTaskPushCreateCheck)
  workflow_dispatch:


# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pull-requests: write
  id-token: write
  actions: write

# Allow one concurrent deployment
concurrency:
  group: "debug"
  cancel-in-progress: true

jobs:
  job1:
    environment: debug
    env:
      ACTIONS_RUNNER_DEBUG: true 
      GH_TOKEN: ${{ github.token }}
      GITHUB_CONTEXT: ${{ toJson(github) }}
      GITHUB_EVENT: ${{ toJson(github.event) }}
    runs-on: self-hosted
    steps:
      # - name: Echo Context
      #   run: |
      #     echo "$env:GITHUB_CONTEXT"
      - name: Echo Event
        run: |
          echo "$env:GITHUB_EVENT"
      - name: Get deployments
        run: |
          curl -Method GET ${{ github.event.repository.deployments_url }}
      - name: Set the value
        id: step_one
        run: |
          echo "action_state=yellow" >> $env:GITHUB_ENV
      - name: Use the value
        id: step_two
        run: |
          echo "${{ env.action_state }}" # This will output 'yellow'
      
      # Test Context
      - name: Echo Context
        id: echo_context
        run: |
          echo "${{ vars.ENV_NAME }}"
      
      # Test setting env
      - name: Set Env
        run: |
          echo "dir_exists=$(Test-Path ${{ vars.ENV_NAME }})" >> $env:GITHUB_ENV
      - name: Set Env 2
        run: |
          echo "dir_2=2" >> $env:GITHUB_ENV
      
      # Read env 2
      - name: Read env.dir_2
        run: |
          echo ${{ env.dir_2 }}
      
      # Read env
      - name: Read Env
        run: |
          echo ${{ env }}
      
      # Read env dir_exists
      - name: Read env.dir_exists
        run: |
          echo ${{ env.dir_exists }}
      
      - name: Checkout
        uses: actions/checkout@v3

      - name: Comment Pull Request Start
        run: |
          gh pr comment --body "DEBUG START"

      # Test output
      - name: Echo Commands
        id: echo
        run: |
          echo "Test" > output.txt
          echo "TEST=test" >> $env:GITHUB_OUTPUT
          echo "TEST1=$(cat output.txt)" >> $env:GITHUB_OUTPUT
      
      - name: Test Echo
        run: |
          echo "test=${{ steps.echo.outputs.TEST }}"
          echo "test1=${{ steps.echo.outputs.TEST1 }}"

      # - name: Comment Pull Request End
      #   run: |
      #     echo "test=${{ steps.echo.outputs.TEST }}"
      #     gh pr comment --body "DEBUG END"- name: Comment Pull Request End

      - name: Trigger Run Log Comment On Pull Request
        run: |
          gh workflow run commentLog.yml -r ${{ github.ref }} -f run_id="${{ github.run_id }}"
      

      